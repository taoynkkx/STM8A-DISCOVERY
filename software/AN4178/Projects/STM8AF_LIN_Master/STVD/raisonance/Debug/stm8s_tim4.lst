RCSTM8 COMPILER V2.44.12.199,  STM8S_TIM4         11/13/12  11:07:57

QCW(0x009A3FE0)

RCSTM8 COMPILER V2.44.12.199, COMPILATION OF MODULE STM8S_TIM4
OBJECT MODULE PLACED IN Debug\stm8s_tim4.o
COMPILER INVOKED BY: OBJECT(Debug\stm8s_tim4.o) PIN(C:\Raisonance\Ride\inc\STM8) PIN(C:\Raisonance\Ride\inc\ST7) PIN(C:\Raisonance\Ride\inc) WRV(0) STM8(SMALL) DEBUG DGC(data) AUTO OT(7,SIZE) PR(Debug\stm8s_tim4.lst) CD CO SB INITSTATICVAR LAOB PIN(..\..\..\..\libraries\stm8s_stdperiph_driver\inc) PIN(..\..\inc) DEFINE(STM8AF52Ax) 

stmt level    source
   1          /**
   2            ******************************************************************************
   3            * @file    stm8s_tim4.c
   4            * @author  MCD Application Team
   5            * @version V2.1.0
   6            * @date    18-November-2011
   7            * @brief   This file contains all the functions for the TIM4 peripheral.
   8            ******************************************************************************
   9            * @attention
  10            *
  11            * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
  12            * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
  13            * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
  14            * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
  15            * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
  16            * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
  17            *
  18            * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
  19            ******************************************************************************
  20            */
  21          
  22          /* Includes ------------------------------------------------------------------*/
  23          #include "stm8s_tim4.h"
  24          
  25          /** @addtogroup STM8S_StdPeriph_Driver
  26            * @{
  27            */
  28          /* Private typedef -----------------------------------------------------------*/
  29          /* Private define ------------------------------------------------------------*/
  30          /* Private macro -------------------------------------------------------------*/
  31          /* Private variables ---------------------------------------------------------*/
  32          /* Private function prototypes -----------------------------------------------*/
  33          /**
  34            * @addtogroup TIM4_Public_Functions
  35            * @{
  36            */
  37          
  38          /**
  39            * @brief  Deinitializes the TIM4 peripheral registers to their default reset values.
  40            * @param  None
  41            * @retval None
  42            */
  43          void TIM4_DeInit(void)
  44          {
  45   1          TIM4->CR1 = TIM4_CR1_RESET_VALUE;
  46   1          TIM4->IER = TIM4_IER_RESET_VALUE;
  47   1          TIM4->CNTR = TIM4_CNTR_RESET_VALUE;
  48   1          TIM4->PSCR = TIM4_PSCR_RESET_VALUE;
  49   1          TIM4->ARR = TIM4_ARR_RESET_VALUE;
  50   1          TIM4->SR1 = TIM4_SR1_RESET_VALUE;
  51   1      }
  52          
  53          /**
  54            * @brief  Initializes the TIM4 Time Base Unit according to the specified parameters.
  55            * @param    TIM4_Prescaler specifies the Prescaler from TIM4_Prescaler_TypeDef.
  56            * @param    TIM4_Period specifies the Period value.
  57            * @retval None
  58            */
  59          void TIM4_TimeBaseInit(TIM4_Prescaler_TypeDef TIM4_Prescaler, uint8_t TIM4_Period)
  60          {
  61   1          /* Check TIM4 prescaler value */
  62   1          assert_param(IS_TIM4_PRESCALER_OK(TIM4_Prescaler));
  63   1          /* Set the Prescaler value */
  64   1          TIM4->PSCR = (uint8_t)(TIM4_Prescaler);
  65   1          /* Set the Autoreload value */
  66   1          TIM4->ARR = (uint8_t)(TIM4_Period);
  67   1      }
  68          
  69          
  70          
  71          /**
  72            * @brief  Enables or disables the TIM4 peripheral.
  73            * @param   NewState new state of the TIM4 peripheral. This parameter can
  74            * be ENABLE or DISABLE.
  75            * @retval None
  76            */
  77          void TIM4_Cmd(FunctionalState NewState)
  78          {
  79   1          /* Check the parameters */
  80   1          assert_param(IS_FUNCTIONALSTATE_OK(NewState));
  81   1      
  82   1          /* set or Reset the CEN Bit */
  83   1          if (NewState != DISABLE)
  84   1          {
  85   2              TIM4->CR1 |= TIM4_CR1_CEN;
  86   2          }
  87   1          else
  88   1          {
  89   2              TIM4->CR1 &= (uint8_t)(~TIM4_CR1_CEN);
  90   2          }
  91   1      }
  92          
  93          /**
  94            * @brief  Enables or disables the specified TIM4 interrupts.
  95            * @param   NewState new state of the TIM4 peripheral.
  96            * This parameter can be: ENABLE or DISABLE.
  97            * @param   TIM4_IT specifies the TIM4 interrupts sources to be enabled or disabled.
  98            * This parameter can be any combination of the following values:
  99            * - TIM4_IT_UPDATE: TIM4 update Interrupt source
 100            * @param   NewState new state of the TIM4 peripheral.
 101            * @retval None
 102            */
 103          void TIM4_ITConfig(TIM4_IT_TypeDef TIM4_IT, FunctionalState NewState)
 104          {
 105   1          /* Check the parameters */
 106   1          assert_param(IS_TIM4_IT_OK(TIM4_IT));
 107   1          assert_param(IS_FUNCTIONALSTATE_OK(NewState));
 108   1      
 109   1          if (NewState != DISABLE)
 110   1          {
 111   2              /* Enable the Interrupt sources */
 112   2              TIM4->IER |= (uint8_t)TIM4_IT;
 113   2          }
 114   1          else
 115   1          {
 116   2              /* Disable the Interrupt sources */
 117   2              TIM4->IER &= (uint8_t)(~TIM4_IT);
 118   2          }
 119   1      }
 120          
 121          /**
 122            * @brief  Enables or Disables the TIM4 Update event.
 123            * @param   NewState new state of the TIM4 peripheral Preload register. This parameter can
 124            * be ENABLE or DISABLE.
 125            * @retval None
 126            */
 127          void TIM4_UpdateDisableConfig(FunctionalState NewState)
 128          {
 129   1          /* Check the parameters */
 130   1          assert_param(IS_FUNCTIONALSTATE_OK(NewState));
 131   1      
 132   1          /* Set or Reset the UDIS Bit */
 133   1          if (NewState != DISABLE)
 134   1          {
 135   2              TIM4->CR1 |= TIM4_CR1_UDIS;
 136   2          }
 137   1          else
 138   1          {
 139   2              TIM4->CR1 &= (uint8_t)(~TIM4_CR1_UDIS);
 140   2          }
 141   1      }
 142          
 143          /**
 144            * @brief  Selects the TIM4 Update Request Interrupt source.
 145            * @param   TIM4_UpdateSource specifies the Update source.
 146            * This parameter can be one of the following values
 147            *                       - TIM4_UPDATESOURCE_REGULAR
 148            *                       - TIM4_UPDATESOURCE_GLOBAL
 149            * @retval None
 150            */
 151          void TIM4_UpdateRequestConfig(TIM4_UpdateSource_TypeDef TIM4_UpdateSource)
 152          {
 153   1          /* Check the parameters */
 154   1          assert_param(IS_TIM4_UPDATE_SOURCE_OK(TIM4_UpdateSource));
 155   1      
 156   1          /* Set or Reset the URS Bit */
 157   1          if (TIM4_UpdateSource != TIM4_UPDATESOURCE_GLOBAL)
 158   1          {
 159   2              TIM4->CR1 |= TIM4_CR1_URS;
 160   2          }
 161   1          else
 162   1          {
 163   2              TIM4->CR1 &= (uint8_t)(~TIM4_CR1_URS);
 164   2          }
 165   1      }
 166          
 167          /**
 168            * @brief  Selects the TIM4’s One Pulse Mode.
 169            * @param   TIM4_OPMode specifies the OPM Mode to be used.
 170            * This parameter can be one of the following values
 171            *                    - TIM4_OPMODE_SINGLE
 172            *                    - TIM4_OPMODE_REPETITIVE
 173            * @retval None
 174            */
 175          void TIM4_SelectOnePulseMode(TIM4_OPMode_TypeDef TIM4_OPMode)
 176          {
 177   1          /* Check the parameters */
 178   1          assert_param(IS_TIM4_OPM_MODE_OK(TIM4_OPMode));
 179   1      
 180   1          /* Set or Reset the OPM Bit */
 181   1          if (TIM4_OPMode != TIM4_OPMODE_REPETITIVE)
 182   1          {
 183   2              TIM4->CR1 |= TIM4_CR1_OPM;
 184   2          }
 185   1          else
 186   1          {
 187   2              TIM4->CR1 &= (uint8_t)(~TIM4_CR1_OPM);
 188   2          }
 189   1      
 190   1      }
 191          
 192          /**
 193            * @brief  Configures the TIM4 Prescaler.
 194            * @param   Prescaler specifies the Prescaler Register value
 195            * This parameter can be one of the following values
 196            *                       -  TIM4_PRESCALER_1
 197            *                       -  TIM4_PRESCALER_2
 198            *                       -  TIM4_PRESCALER_4
 199            *                       -  TIM4_PRESCALER_8
 200            *                       -  TIM4_PRESCALER_16
 201            *                       -  TIM4_PRESCALER_32
 202            *                       -  TIM4_PRESCALER_64
 203            *                       -  TIM4_PRESCALER_128
 204            * @param   TIM4_PSCReloadMode specifies the TIM4 Prescaler Reload mode.
 205            * This parameter can be one of the following values
 206            *                       - TIM4_PSCRELOADMODE_IMMEDIATE: The Prescaler is loaded
 207            *                         immediatly.
 208            *                       - TIM4_PSCRELOADMODE_UPDATE: The Prescaler is loaded at
 209            *                         the update event.
 210            * @retval None
 211            */
 212          void TIM4_PrescalerConfig(TIM4_Prescaler_TypeDef Prescaler, TIM4_PSCReloadMode_TypeDef TIM4_PSCReloadMode)
 213          {
 214   1          /* Check the parameters */
 215   1          assert_param(IS_TIM4_PRESCALER_RELOAD_OK(TIM4_PSCReloadMode));
 216   1          assert_param(IS_TIM4_PRESCALER_OK(Prescaler));
 217   1      
 218   1          /* Set the Prescaler value */
 219   1          TIM4->PSCR = (uint8_t)Prescaler;
 220   1      
 221   1          /* Set or reset the UG Bit */
 222   1          TIM4->EGR = (uint8_t)TIM4_PSCReloadMode;
 223   1      }
 224          
 225          /**
 226            * @brief  Enables or disables TIM4 peripheral Preload register on ARR.
 227            * @param   NewState new state of the TIM4 peripheral Preload register.
 228            * This parameter can be ENABLE or DISABLE.
 229            * @retval None
 230            */
 231          void TIM4_ARRPreloadConfig(FunctionalState NewState)
 232          {
 233   1          /* Check the parameters */
 234   1          assert_param(IS_FUNCTIONALSTATE_OK(NewState));
 235   1      
 236   1          /* Set or Reset the ARPE Bit */
 237   1          if (NewState != DISABLE)
 238   1          {
 239   2              TIM4->CR1 |= TIM4_CR1_ARPE;
 240   2          }
 241   1          else
 242   1          {
 243   2              TIM4->CR1 &= (uint8_t)(~TIM4_CR1_ARPE);
 244   2          }
 245   1      }
 246          
 247          /**
 248            * @brief  Configures the TIM4 event to be generated by software.
 249            * @param   TIM4_EventSource specifies the event source.
 250            * This parameter can be one of the following values:
 251            *                       - TIM4_EVENTSOURCE_UPDATE: TIM4 update Event source
 252            * @retval None
 253            */
 254          void TIM4_GenerateEvent(TIM4_EventSource_TypeDef TIM4_EventSource)
 255          {
 256   1          /* Check the parameters */
 257   1          assert_param(IS_TIM4_EVENT_SOURCE_OK(TIM4_EventSource));
 258   1      
 259   1          /* Set the event sources */
 260   1          TIM4->EGR = (uint8_t)(TIM4_EventSource);
 261   1      }
 262          
 263          
 264          /**
 265            * @brief  Sets the TIM4 Counter Register value.
 266            * @param   Counter specifies the Counter register new value.
 267            * This parameter is between 0x00 and 0xFF.
 268            * @retval None
 269            */
 270          void TIM4_SetCounter(uint8_t Counter)
 271          {
 272   1          /* Set the Counter Register value */
 273   1          TIM4->CNTR = (uint8_t)(Counter);
 274   1      }
 275          
 276          
 277          /**
 278            * @brief  Sets the TIM4 Autoreload Register value.
 279            * @param   Autoreload specifies the Autoreload register new value.
 280            * This parameter is between 0x00 and 0xFF.
 281            * @retval None
 282            */
 283          void TIM4_SetAutoreload(uint8_t Autoreload)
 284          {
 285   1          /* Set the Autoreload Register value */
 286   1          TIM4->ARR = (uint8_t)(Autoreload);
 287   1      }
 288          
 289          /**
 290            * @brief  Gets the TIM4 Counter value.
 291            * @param  None
 292            * @retval Counter Register value.
 293            */
 294          uint8_t TIM4_GetCounter(void)
 295          {
 296   1          /* Get the Counter Register value */
 297   1          return (uint8_t)(TIM4->CNTR);
 298   1      }
 299          
 300          /**
 301            * @brief  Gets the TIM4 Prescaler value.
 302            * @param  None
 303            * @retval Prescaler Register configuration value.
 304            */
 305          TIM4_Prescaler_TypeDef TIM4_GetPrescaler(void)
 306          {
 307   1          /* Get the Prescaler Register value */
 308   1          return (TIM4_Prescaler_TypeDef)(TIM4->PSCR);
 309   1      }
 310          
 311          /**
 312            * @brief  Checks whether the specified TIM4 flag is set or not.
 313            * @param   TIM4_FLAG specifies the flag to check.
 314            * This parameter can be one of the following values:
 315            *                       - TIM4_FLAG_UPDATE: TIM4 update Flag
 316            * @retval FlagStatus The new state of TIM4_FLAG (SET or RESET).
 317            */
 318          FlagStatus TIM4_GetFlagStatus(TIM4_FLAG_TypeDef TIM4_FLAG)
 319          {
 320   1          FlagStatus bitstatus = RESET;
 321   1        
 322   1          /* Check the parameters */
 323   1          assert_param(IS_TIM4_GET_FLAG_OK(TIM4_FLAG));
 324   1      
 325   1        if ((TIM4->SR1 & (uint8_t)TIM4_FLAG)  != 0)
 326   1        {
 327   2          bitstatus = SET;
 328   2        }
 329   1        else
 330   1        {
 331   2          bitstatus = RESET;
 332   2        }
 333   1        return ((FlagStatus)bitstatus);
 334   1      }
 335          
 336          /**
 337            * @brief  Clears the TIM4’s pending flags.
 338            * @param   TIM4_FLAG specifies the flag to clear.
 339            * This parameter can be one of the following values:
 340            *                       - TIM4_FLAG_UPDATE: TIM4 update Flag
 341            * @retval None.
 342            */
 343          void TIM4_ClearFlag(TIM4_FLAG_TypeDef TIM4_FLAG)
 344          {
 345   1          /* Check the parameters */
 346   1          assert_param(IS_TIM4_GET_FLAG_OK(TIM4_FLAG));
 347   1      
 348   1          /* Clear the flags (rc_w0) clear this bit by writing 0. Writing ‘1’ has no effect*/
 349   1          TIM4->SR1 = (uint8_t)(~TIM4_FLAG);
 350   1      
 351   1      }
 352          /**
 353            * @brief  Checks whether the TIM4 interrupt has occurred or not.
 354            * @param   TIM4_IT specifies the TIM4 interrupt source to check.
 355            * This parameter can be one of the following values:
 356            *                       - TIM4_IT_UPDATE: TIM4 update Interrupt source
 357            * @retval ITStatus The new state of the TIM4_IT (SET or RESET).
 358            */
 359          
 360          ITStatus TIM4_GetITStatus(TIM4_IT_TypeDef TIM4_IT)
 361          {
 362   1          ITStatus bitstatus = RESET;
 363   1      
 364   1        uint8_t itstatus = 0x0, itenable = 0x0;
 365   1      
 366   1        /* Check the parameters */
 367   1        assert_param(IS_TIM4_IT_OK(TIM4_IT));
 368   1      
 369   1        itstatus = (uint8_t)(TIM4->SR1 & (uint8_t)TIM4_IT);
 370   1      
 371   1        itenable = (uint8_t)(TIM4->IER & (uint8_t)TIM4_IT);
 372   1      
 373   1        if ((itstatus != (uint8_t)RESET ) && (itenable != (uint8_t)RESET ))
 374   1        {
 375   2          bitstatus = (ITStatus)SET;
 376   2        }
 377   1        else
 378   1        {
 379   2          bitstatus = (ITStatus)RESET;
 380   2        }
 381   1        return ((ITStatus)bitstatus);
 382   1      }
 383          
 384          /**
 385            * @brief  Clears the TIM4's interrupt pending bits.
 386            * @param   TIM4_IT specifies the pending bit to clear.
 387            * This parameter can be one of the following values:
 388            *                       - TIM4_IT_UPDATE: TIM4 update Interrupt source
 389            * @retval None.
 390            */
 391          void TIM4_ClearITPendingBit(TIM4_IT_TypeDef TIM4_IT)
 392          {
 393   1          /* Check the parameters */
 394   1          assert_param(IS_TIM4_IT_OK(TIM4_IT));
 395   1      
 396   1          /* Clear the IT pending Bit */
 397   1          TIM4->SR1 = (uint8_t)(~TIM4_IT);
 398   1      }
 399          
 400          /**
 401            * @}
 402            */
 403            
 404            /**
 405            * @}
 406            */
 407            
 408          /******************* (C) COPYRIGHT 2011 STMicroelectronics *****END OF FILE****/
 409          
RCSTM8 COMPILER V2.44.12.199
ASSEMBLY LISTING OF GENERATED OBJECT CODE

              ; FUNCTION ?TIM4_DeInit (BEGIN)
              ; SOURCE LINE # 45 
0000 725F5340                          CLR    05340H
              ; SOURCE LINE # 46 
0004 725F5341                          CLR    05341H
              ; SOURCE LINE # 47 
0008 725F5344                          CLR    05344H
              ; SOURCE LINE # 48 
000C 725F5345                          CLR    05345H
              ; SOURCE LINE # 49 
0010 35FF5346                          MOV    05346H,#0FFH
              ; SOURCE LINE # 50 
0014 725F5342                          CLR    05342H
              ; SOURCE LINE # 51 
0018 81                                RET    

              ; FUNCTION ?TIM4_DeInit (END)

              ; FUNCTION ?TIM4_TimeBaseInit (BEGIN)
              ; Register-parameter TIM4_Prescaler (XW) is relocated (AUTO)
              ; Register-parameter TIM4_Period (A) is relocated (AUTO)
              ; SOURCE LINE # 59 
0000 89                                PUSHW  X
0001 88                                PUSH   A
              ; SOURCE LINE # 62 
0002 5D                                TNZW   X
0003 2730                              JREQ   ?NXT_0001
0005 5F                                CLRW   X
0006 5C                                INCW   X
0007 1302       F                      CPW    X,(002H,SP)   ; [ TIM4_Prescaler ]
0009 272A                              JREQ   ?NXT_0001
000B 5C                                INCW   X
000C 1302       F                      CPW    X,(002H,SP)   ; [ TIM4_Prescaler ]
000E 2725                              JREQ   ?NXT_0001
0010 5C                                INCW   X
0011 1302       F                      CPW    X,(002H,SP)   ; [ TIM4_Prescaler ]
0013 2720                              JREQ   ?NXT_0001
0015 5C                                INCW   X
0016 1302       F                      CPW    X,(002H,SP)   ; [ TIM4_Prescaler ]
0018 271B                              JREQ   ?NXT_0001
001A 5C                                INCW   X
001B 1302       F                      CPW    X,(002H,SP)   ; [ TIM4_Prescaler ]
001D 2716                              JREQ   ?NXT_0001
001F 5C                                INCW   X
0020 1302       F                      CPW    X,(002H,SP)   ; [ TIM4_Prescaler ]
0022 2711                              JREQ   ?NXT_0001
0024 5C                                INCW   X
0025 1302       F                      CPW    X,(002H,SP)   ; [ TIM4_Prescaler ]
0027 270C                              JREQ   ?NXT_0001
0029 CD0000     F DNF            M(04)  CALL  ?C?mv4_pg2sk1
002C         ?DATASTART_0001:
002C 3E                             M  DB     03EH
002D         ?DATAEND_0001:
002D AE0000     F                      LDW    X,#HIGH(?STR?STM8S_TIM4?BASE)
0030 CD0000     F                      CALL   ?assert_failed
0033 5B04                              ADD    SP,#004H
0035         ?NXT_0001:
              ; SOURCE LINE # 64 
0035 7B03       F                      LD     A,(003H,SP)   ; [ TIM4_Prescaler + 01H ]
0037 C75345                            LD     05345H,A
              ; SOURCE LINE # 66 
003A 7B01       F                      LD     A,(001H,SP)   ; [ TIM4_Period ]
003C C75346                            LD     05346H,A
              ; SOURCE LINE # 67 
003F 5B03                              ADD    SP,#003H
0041 81                                RET    
              ; TIM4_Prescaler (size=2).  parameter in AUTO
              ; TIM4_Period  unsigned char  (size=1).  parameter in AUTO

              ; FUNCTION ?TIM4_TimeBaseInit (END)

              ; FUNCTION ?TIM4_Cmd (BEGIN)
              ; Register-parameter NewState (XW) is relocated (AUTO)
              ; SOURCE LINE # 77 
0000 89                                PUSHW  X
              ; SOURCE LINE # 80 
0001 5D                                TNZW   X
0002 270F                              JREQ   ?NXT_0004
0004 5A                                DECW   X
0005 270C                              JREQ   ?NXT_0004
0007 CD0000     F DNF            M(04)  CALL  ?C?mv4_pg2sk1
000A         ?DATASTART_0003:
000A 50                             M  DB     050H
000B         ?DATAEND_0003:
000B AE0000     F                      LDW    X,#HIGH(?STR?STM8S_TIM4?BASE)
000E CD0000     F                      CALL   ?assert_failed
0011 5B04                              ADD    SP,#004H
0013         ?NXT_0004:
              ; SOURCE LINE # 83 
0013 1E01       F                      LDW    X,(001H,SP)   ; [ NewState ]
0015 2706                              JREQ   ?ELSE_0005
              ; SOURCE LINE # 85 
0017 72105340                          BSET   05340H,#000H
001B 2004                              JRA    ?EPILOG_0002
001D         ?ELSE_0005:
              ; SOURCE LINE # 89 
001D 72115340                          BRES   05340H,#000H
0021         ?EPILOG_0002:
              ; SOURCE LINE # 91 
0021 85                                POPW   X
0022 81                                RET    
              ; NewState     (size=2).  parameter in AUTO

              ; FUNCTION ?TIM4_Cmd (END)

              ; FUNCTION ?TIM4_ITConfig (BEGIN)
              ; Register-parameter TIM4_IT (XW) is relocated (AUTO)
              ; SOURCE LINE # 103 
0000 89                                PUSHW  X
              ; SOURCE LINE # 106 
0001 5A                                DECW   X
0002 270C                              JREQ   ?NXT_0009
0004 CD0000     F DNF            M(04)  CALL  ?C?mv4_pg2sk1
0007         ?DATASTART_0006:
0007 6A                             M  DB     06AH
0008         ?DATAEND_0006:
0008 AE0000     F                      LDW    X,#HIGH(?STR?STM8S_TIM4?BASE)
000B CD0000     F                      CALL   ?assert_failed
000E 5B04                              ADD    SP,#004H
0010         ?NXT_0009:
              ; SOURCE LINE # 107 
0010 1E05       F                      LDW    X,(005H,SP)   ; [ NewState ]
0012 270F                              JREQ   ?NXT_0010
0014 5A                                DECW   X
0015 270C                              JREQ   ?NXT_0010
0017 CD0000     F DNF            M(04)  CALL  ?C?mv4_pg2sk1
001A         ?DATASTART_0007:
001A 6B                             M  DB     06BH
001B         ?DATAEND_0007:
001B AE0000     F                      LDW    X,#HIGH(?STR?STM8S_TIM4?BASE)
001E CD0000     F                      CALL   ?assert_failed
0021 5B04                              ADD    SP,#004H
0023         ?NXT_0010:
              ; SOURCE LINE # 109 
0023 1E05       F                      LDW    X,(005H,SP)   ; [ NewState ]
0025 2707                              JREQ   ?ELSE_0011
              ; SOURCE LINE # 112 
0027 C65341                            LD     A,05341H
002A 1A02       F                      OR     A,(002H,SP)   ; [ TIM4_IT + 01H ]
002C 2006                              JRA    ?EPILOG_0003
002E         ?ELSE_0011:
              ; SOURCE LINE # 117 
002E 7B02       F                      LD     A,(002H,SP)   ; [ TIM4_IT + 01H ]
0030 43                                CPL    A
0031 C45341                            AND    A,05341H
0034         ?EPILOG_0003:
0034 C75341                            LD     05341H,A
              ; SOURCE LINE # 119 
0037 85                                POPW   X
0038 81                                RET    
              ; TIM4_IT      (size=2).  parameter in AUTO
              ; NewState     (size=2).  parameter in AUTO

              ; FUNCTION ?TIM4_ITConfig (END)

              ; FUNCTION ?TIM4_UpdateDisableConfig (BEGIN)
              ; Register-parameter NewState (XW) is relocated (AUTO)
              ; SOURCE LINE # 127 
0000 89                                PUSHW  X
              ; SOURCE LINE # 130 
0001 5D                                TNZW   X
0002 270F                              JREQ   ?NXT_0014
0004 5A                                DECW   X
0005 270C                              JREQ   ?NXT_0014
0007 CD0000     F DNF            M(04)  CALL  ?C?mv4_pg2sk1
000A         ?DATASTART_0009:
000A 82                             M  DB     082H
000B         ?DATAEND_0009:
000B AE0000     F                      LDW    X,#HIGH(?STR?STM8S_TIM4?BASE)
000E CD0000     F                      CALL   ?assert_failed
0011 5B04                              ADD    SP,#004H
0013         ?NXT_0014:
              ; SOURCE LINE # 133 
0013 1E01       F                      LDW    X,(001H,SP)   ; [ NewState ]
0015 2706                              JREQ   ?ELSE_0015
              ; SOURCE LINE # 135 
0017 72125340                          BSET   05340H,#001H
001B 2004                              JRA    ?EPILOG_0004
001D         ?ELSE_0015:
              ; SOURCE LINE # 139 
001D 72135340                          BRES   05340H,#001H
0021         ?EPILOG_0004:
              ; SOURCE LINE # 141 
0021 85                                POPW   X
0022 81                                RET    
              ; NewState     (size=2).  parameter in AUTO

              ; FUNCTION ?TIM4_UpdateDisableConfig (END)

              ; FUNCTION ?TIM4_UpdateRequestConfig (BEGIN)
              ; Register-parameter TIM4_UpdateSource (XW) is relocated (AUTO)
              ; SOURCE LINE # 151 
0000 89                                PUSHW  X
              ; SOURCE LINE # 154 
0001 5D                                TNZW   X
0002 270F                              JREQ   ?NXT_0018
0004 5A                                DECW   X
0005 270C                              JREQ   ?NXT_0018
0007 CD0000     F DNF            M(04)  CALL  ?C?mv4_pg2sk1
000A         ?DATASTART_0011:
000A 9A                             M  DB     09AH
000B         ?DATAEND_0011:
000B AE0000     F                      LDW    X,#HIGH(?STR?STM8S_TIM4?BASE)
000E CD0000     F                      CALL   ?assert_failed
0011 5B04                              ADD    SP,#004H
0013         ?NXT_0018:
              ; SOURCE LINE # 157 
0013 1E01       F                      LDW    X,(001H,SP)   ; [ TIM4_UpdateSource ]
0015 2706                              JREQ   ?ELSE_0019
              ; SOURCE LINE # 159 
0017 72145340                          BSET   05340H,#002H
001B 2004                              JRA    ?EPILOG_0005
001D         ?ELSE_0019:
              ; SOURCE LINE # 163 
001D 72155340                          BRES   05340H,#002H
0021         ?EPILOG_0005:
              ; SOURCE LINE # 165 
0021 85                                POPW   X
0022 81                                RET    
              ; TIM4_UpdateSource (size=2).  parameter in AUTO

              ; FUNCTION ?TIM4_UpdateRequestConfig (END)

              ; FUNCTION ?TIM4_SelectOnePulseMode (BEGIN)
              ; Register-parameter TIM4_OPMode (XW) is relocated (AUTO)
              ; SOURCE LINE # 175 
0000 89                                PUSHW  X
              ; SOURCE LINE # 178 
0001 5A                                DECW   X
0002 2710                              JREQ   ?NXT_0022
0004 1E01       F                      LDW    X,(001H,SP)   ; [ TIM4_OPMode ]
0006 270C                              JREQ   ?NXT_0022
0008 CD0000     F DNF            M(04)  CALL  ?C?mv4_pg2sk1
000B         ?DATASTART_0013:
000B B2                             M  DB     0B2H
000C         ?DATAEND_0013:
000C AE0000     F                      LDW    X,#HIGH(?STR?STM8S_TIM4?BASE)
000F CD0000     F                      CALL   ?assert_failed
0012 5B04                              ADD    SP,#004H
0014         ?NXT_0022:
              ; SOURCE LINE # 181 
0014 1E01       F                      LDW    X,(001H,SP)   ; [ TIM4_OPMode ]
0016 2706                              JREQ   ?ELSE_0023
              ; SOURCE LINE # 183 
0018 72165340                          BSET   05340H,#003H
001C 2004                              JRA    ?EPILOG_0006
001E         ?ELSE_0023:
              ; SOURCE LINE # 187 
001E 72175340                          BRES   05340H,#003H
0022         ?EPILOG_0006:
              ; SOURCE LINE # 190 
0022 85                                POPW   X
0023 81                                RET    
              ; TIM4_OPMode  (size=2).  parameter in AUTO

              ; FUNCTION ?TIM4_SelectOnePulseMode (END)

              ; FUNCTION ?TIM4_PrescalerConfig (BEGIN)
              ; Register-parameter Prescaler (XW) is relocated (AUTO)
              ; SOURCE LINE # 212 
0000 89                                PUSHW  X
              ; SOURCE LINE # 215 
0001 1E05       F                      LDW    X,(005H,SP)   ; [ TIM4_PSCReloadMode ]
0003 270F                              JREQ   ?NXT_0026
0005 5A                                DECW   X
0006 270C                              JREQ   ?NXT_0026
0008 CD0000     F DNF            M(04)  CALL  ?C?mv4_pg2sk1
000B         ?DATASTART_0016:
000B D7                             M  DB     0D7H
000C         ?DATAEND_0016:
000C AE0000     F                      LDW    X,#HIGH(?STR?STM8S_TIM4?BASE)
000F CD0000     F                      CALL   ?assert_failed
0012 5B04                              ADD    SP,#004H
0014         ?NXT_0026:
              ; SOURCE LINE # 216 
0014 1E01       F                      LDW    X,(001H,SP)   ; [ Prescaler ]
0016 272F                              JREQ   ?NXT_0027
0018 5A                                DECW   X
0019 272C                              JREQ   ?NXT_0027
001B AE0002                            LDW    X,#00002H
001E 1301       F                      CPW    X,(001H,SP)   ; [ Prescaler ]
0020 2725                              JREQ   ?NXT_0027
0022 5C                                INCW   X
0023 1301       F                      CPW    X,(001H,SP)   ; [ Prescaler ]
0025 2720                              JREQ   ?NXT_0027
0027 5C                                INCW   X
0028 1301       F                      CPW    X,(001H,SP)   ; [ Prescaler ]
002A 271B                              JREQ   ?NXT_0027
002C 5C                                INCW   X
002D 1301       F                      CPW    X,(001H,SP)   ; [ Prescaler ]
002F 2716                              JREQ   ?NXT_0027
0031 5C                                INCW   X
0032 1301       F                      CPW    X,(001H,SP)   ; [ Prescaler ]
0034 2711                              JREQ   ?NXT_0027
0036 5C                                INCW   X
0037 1301       F                      CPW    X,(001H,SP)   ; [ Prescaler ]
0039 270C                              JREQ   ?NXT_0027
003B CD0000     F DNF            M(04)  CALL  ?C?mv4_pg2sk1
003E         ?DATASTART_0017:
003E D8                             M  DB     0D8H
003F         ?DATAEND_0017:
003F AE0000     F                      LDW    X,#HIGH(?STR?STM8S_TIM4?BASE)
0042 CD0000     F                      CALL   ?assert_failed
0045 5B04                              ADD    SP,#004H
0047         ?NXT_0027:
              ; SOURCE LINE # 219 
0047 7B02       F                      LD     A,(002H,SP)   ; [ Prescaler + 01H ]
0049 C75345                            LD     05345H,A
              ; SOURCE LINE # 222 
004C 7B06       F                      LD     A,(006H,SP)   ; [ TIM4_PSCReloadMode + 01H ]
004E C75343                            LD     05343H,A
              ; SOURCE LINE # 223 
0051 85                                POPW   X
0052 81                                RET    
              ; Prescaler    (size=2).  parameter in AUTO
              ; TIM4_PSCReloadMode (size=2).  parameter in AUTO

              ; FUNCTION ?TIM4_PrescalerConfig (END)

              ; FUNCTION ?TIM4_ARRPreloadConfig (BEGIN)
              ; Register-parameter NewState (XW) is relocated (AUTO)
              ; SOURCE LINE # 231 
0000 89                                PUSHW  X
              ; SOURCE LINE # 234 
0001 5D                                TNZW   X
0002 270F                              JREQ   ?NXT_0030
0004 5A                                DECW   X
0005 270C                              JREQ   ?NXT_0030
0007 CD0000     F DNF            M(04)  CALL  ?C?mv4_pg2sk1
000A         ?DATASTART_0019:
000A EA                             M  DB     0EAH
000B         ?DATAEND_0019:
000B AE0000     F                      LDW    X,#HIGH(?STR?STM8S_TIM4?BASE)
000E CD0000     F                      CALL   ?assert_failed
0011 5B04                              ADD    SP,#004H
0013         ?NXT_0030:
              ; SOURCE LINE # 237 
0013 1E01       F                      LDW    X,(001H,SP)   ; [ NewState ]
0015 2706                              JREQ   ?ELSE_0031
              ; SOURCE LINE # 239 
0017 721E5340                          BSET   05340H,#007H
001B 2004                              JRA    ?EPILOG_0008
001D         ?ELSE_0031:
              ; SOURCE LINE # 243 
001D 721F5340                          BRES   05340H,#007H
0021         ?EPILOG_0008:
              ; SOURCE LINE # 245 
0021 85                                POPW   X
0022 81                                RET    
              ; NewState     (size=2).  parameter in AUTO

              ; FUNCTION ?TIM4_ARRPreloadConfig (END)

              ; FUNCTION ?TIM4_GenerateEvent (BEGIN)
              ; Register-parameter TIM4_EventSource (XW) is relocated (AUTO)
              ; SOURCE LINE # 254 
0000 89                                PUSHW  X
              ; SOURCE LINE # 257 
0001 5A                                DECW   X
0002 270E                              JREQ   ?NXT_0033
0004 AE0101                            LDW    X,#00101H
0007 89                                PUSHW  X
0008 5F                                CLRW   X
0009 89                                PUSHW  X
000A AE0000     F                      LDW    X,#HIGH(?STR?STM8S_TIM4?BASE)
000D CD0000     F                      CALL   ?assert_failed
0010 5B04                              ADD    SP,#004H
0012         ?NXT_0033:
              ; SOURCE LINE # 260 
0012 7B02       F                      LD     A,(002H,SP)   ; [ TIM4_EventSource + 01H ]
0014 C75343                            LD     05343H,A
              ; SOURCE LINE # 261 
0017 85                                POPW   X
0018 81                                RET    
              ; TIM4_EventSource (size=2).  parameter in AUTO

              ; FUNCTION ?TIM4_GenerateEvent (END)

              ; FUNCTION ?TIM4_SetCounter (BEGIN)
              ; Register-parameter Counter (A) is relocated (AUTO)
              ; SOURCE LINE # 273 
0000 C75344                            LD     05344H,A
              ; SOURCE LINE # 274 
0003 81                                RET    
              ; Counter      unsigned char  (size=1).  parameter in AUTO

              ; FUNCTION ?TIM4_SetCounter (END)

              ; FUNCTION ?TIM4_SetAutoreload (BEGIN)
              ; Register-parameter Autoreload (A) is relocated (AUTO)
              ; SOURCE LINE # 286 
0000 C75346                            LD     05346H,A
              ; SOURCE LINE # 287 
0003 81                                RET    
              ; Autoreload   unsigned char  (size=1).  parameter in AUTO

              ; FUNCTION ?TIM4_SetAutoreload (END)

              ; FUNCTION ?TIM4_GetCounter (BEGIN)
              ; SOURCE LINE # 297 
0000 C65344                            LD     A,05344H
              ; SOURCE LINE # 298 
0003 81                                RET    

              ; FUNCTION ?TIM4_GetCounter (END)

              ; FUNCTION ?TIM4_GetPrescaler (BEGIN)
              ; SOURCE LINE # 308 
0000 C65345                            LD     A,05345H
0003 5F                                CLRW   X
0004 97                                LD     XL,A
              ; SOURCE LINE # 309 
0005 81                                RET    

              ; FUNCTION ?TIM4_GetPrescaler (END)

              ; FUNCTION ?TIM4_GetFlagStatus (BEGIN)
              ; Register-parameter TIM4_FLAG (XW) is relocated (AUTO)
              ; SOURCE LINE # 318 
0000 89                                PUSHW  X
              ; SOURCE LINE # 320 
0001 5F                                CLRW   X
0002 89                                PUSHW  X
              ; SOURCE LINE # 323 
0003 5C                                INCW   X
0004 1303       F                      CPW    X,(003H,SP)   ; [ TIM4_FLAG ]
0006 270E                              JREQ   ?NXT_0037
0008 AE0143                            LDW    X,#00143H
000B 89                                PUSHW  X
000C 5F                                CLRW   X
000D 89                                PUSHW  X
000E AE0000     F                      LDW    X,#HIGH(?STR?STM8S_TIM4?BASE)
0011 CD0000     F                      CALL   ?assert_failed
0014 5B04                              ADD    SP,#004H
0016         ?NXT_0037:
              ; SOURCE LINE # 325 
0016 7B04       F                      LD     A,(004H,SP)   ; [ TIM4_FLAG + 01H ]
0018 5F                                CLRW   X
0019 C55342                            BCP    A,05342H
001C 2701                              JREQ   ?ELSE_0037
              ; SOURCE LINE # 327 
001E 5C                                INCW   X
001F         ?ELSE_0037:
              ; SOURCE LINE # 334 
001F 5B04                              ADD    SP,#004H
0021 81                                RET    
              ; TIM4_FLAG    (size=2).  parameter in AUTO
              ; bitstatus    (size=2). Automatic variable  in AUTO

              ; FUNCTION ?TIM4_GetFlagStatus (END)

              ; FUNCTION ?TIM4_ClearFlag (BEGIN)
              ; Register-parameter TIM4_FLAG (XW) is relocated (AUTO)
              ; SOURCE LINE # 343 
0000 89                                PUSHW  X
              ; SOURCE LINE # 346 
0001 5A                                DECW   X
0002 270E                              JREQ   ?NXT_0041
0004 AE015A                            LDW    X,#0015AH
0007 89                                PUSHW  X
0008 5F                                CLRW   X
0009 89                                PUSHW  X
000A AE0000     F                      LDW    X,#HIGH(?STR?STM8S_TIM4?BASE)
000D CD0000     F                      CALL   ?assert_failed
0010 5B04                              ADD    SP,#004H
0012         ?NXT_0041:
              ; SOURCE LINE # 349 
0012 7B02       F                      LD     A,(002H,SP)   ; [ TIM4_FLAG + 01H ]
0014 43                                CPL    A
0015 C75342                            LD     05342H,A
              ; SOURCE LINE # 351 
0018 85                                POPW   X
0019 81                                RET    
              ; TIM4_FLAG    (size=2).  parameter in AUTO

              ; FUNCTION ?TIM4_ClearFlag (END)

              ; FUNCTION ?TIM4_GetITStatus (BEGIN)
              ; Register-parameter TIM4_IT (XW) is relocated (AUTO)
              ; SOURCE LINE # 360 
0000 89                                PUSHW  X
0001 5204                              SUB    SP,#004H
              ; SOURCE LINE # 367 
0003 5F                                CLRW   X
0004 5C                                INCW   X
0005 1305       F                      CPW    X,(005H,SP)   ; [ TIM4_IT ]
0007 270E                              JREQ   ?NXT_0044
0009 AE016F                            LDW    X,#0016FH
000C 89                                PUSHW  X
000D 5F                                CLRW   X
000E 89                                PUSHW  X
000F AE0000     F                      LDW    X,#HIGH(?STR?STM8S_TIM4?BASE)
0012 CD0000     F                      CALL   ?assert_failed
0015 5B04                              ADD    SP,#004H
0017         ?NXT_0044:
              ; SOURCE LINE # 369 
0017 7B06       F                      LD     A,(006H,SP)   ; [ TIM4_IT + 01H ]
0019 C45342                            AND    A,05342H
001C 6B03       F                      LD     (003H,SP),A   ; [ itstatus ]
              ; SOURCE LINE # 371 
001E 7B06       F                      LD     A,(006H,SP)   ; [ TIM4_IT + 01H ]
0020 C45341                            AND    A,05341H
0023 6B04       F                      LD     (004H,SP),A   ; [ itenable ]
              ; SOURCE LINE # 373 
0025 4F                                CLR    A
0026 1103       F                      CP     A,(003H,SP)   ; [ itstatus ]
0028 2708                              JREQ   ?ELSE_0043
002A 1104       F                      CP     A,(004H,SP)   ; [ itenable ]
002C 2704                              JREQ   ?ELSE_0043
              ; SOURCE LINE # 375 
002E 5F                                CLRW   X
002F 5C                                INCW   X
0030 2001                              JRA    ?NXT_0045
0032         ?ELSE_0043:
              ; SOURCE LINE # 379 
0032 5F                                CLRW   X
0033         ?NXT_0045:
              ; SOURCE LINE # 382 
0033 5B06                              ADD    SP,#006H
0035 81                                RET    
              ; TIM4_IT      (size=2).  parameter in AUTO
              ; bitstatus    (size=2). Automatic variable  in AUTO
              ; itstatus     unsigned char  (size=1). Automatic variable  in AUTO
              ; itenable     unsigned char  (size=1). Automatic variable  in AUTO

              ; FUNCTION ?TIM4_GetITStatus (END)

              ; FUNCTION ?TIM4_ClearITPendingBit (BEGIN)
              ; Register-parameter TIM4_IT (XW) is relocated (AUTO)
              ; SOURCE LINE # 391 
0000 89                                PUSHW  X
              ; SOURCE LINE # 394 
0001 5A                                DECW   X
0002 270E                              JREQ   ?NXT_0047
0004 AE018A                            LDW    X,#0018AH
0007 89                                PUSHW  X
0008 5F                                CLRW   X
0009 89                                PUSHW  X
000A AE0000     F                      LDW    X,#HIGH(?STR?STM8S_TIM4?BASE)
000D CD0000     F                      CALL   ?assert_failed
0010 5B04                              ADD    SP,#004H
0012         ?NXT_0047:
              ; SOURCE LINE # 397 
0012 7B02       F                      LD     A,(002H,SP)   ; [ TIM4_IT + 01H ]
0014 43                                CPL    A
0015 C75342                            LD     05342H,A
              ; SOURCE LINE # 398 
0018 85                                POPW   X
0019 81                                RET    
              ; TIM4_IT      (size=2).  parameter in AUTO

              ; FUNCTION ?TIM4_ClearITPendingBit (END)

RCSTM8 COMPILER V2.44.12.199
NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====

int8_t . . . . . . . . . . . . . . . .  TYPEDEF ------- ????? -------      1
int16_t. . . . . . . . . . . . . . . .  TYPEDEF ------- INT      -------     2
int32_t. . . . . . . . . . . . . . . .  TYPEDEF ------- LONG     -------     4
uint8_t. . . . . . . . . . . . . . . .  TYPEDEF ------- U_CHAR  -------     1
uint16_t . . . . . . . . . . . . . . .  TYPEDEF ------- U_CHAR  -------     2
uint32_t . . . . . . . . . . . . . . .  TYPEDEF ------- ????? -------      4
s32. . . . . . . . . . . . . . . . . .  TYPEDEF ------- LONG     -------     4
s16. . . . . . . . . . . . . . . . . .  TYPEDEF ------- INT      -------     2
s8 . . . . . . . . . . . . . . . . . .  TYPEDEF ------- ????? -------      1
u32. . . . . . . . . . . . . . . . . .  TYPEDEF ------- ????? -------      4
u16. . . . . . . . . . . . . . . . . .  TYPEDEF ------- U_CHAR  -------     2
u8 . . . . . . . . . . . . . . . . . .  TYPEDEF ------- U_CHAR  -------     1
FALSE. . . . . . . . . . . . . . . . . E_CONST  ----- INT      -------  2
TRUE . . . . . . . . . . . . . . . . . E_CONST  ----- INT      -------  2
bool . . . . . . . . . . . . . . . . .  TYPEDEF ------- INT   -------     2
RESET. . . . . . . . . . . . . . . . . E_CONST  ----- INT      -------  2
SET. . . . . . . . . . . . . . . . . . E_CONST  ----- INT      -------  2
FlagStatus . . . . . . . . . . . . . .  TYPEDEF ------- INT   -------     2
ITStatus . . . . . . . . . . . . . . .  TYPEDEF ------- INT   -------     2
BitStatus. . . . . . . . . . . . . . .  TYPEDEF ------- INT   -------     2
BitAction. . . . . . . . . . . . . . .  TYPEDEF ------- INT   -------     2
DISABLE. . . . . . . . . . . . . . . . E_CONST  ----- INT      -------  2
ENABLE . . . . . . . . . . . . . . . . E_CONST  ----- INT      -------  2
FunctionalState. . . . . . . . . . . .  TYPEDEF ------- INT   -------     2
ERROR. . . . . . . . . . . . . . . . . E_CONST  ----- INT      -------  2
SUCCESS. . . . . . . . . . . . . . . . E_CONST  ----- INT      -------  2
ErrorStatus. . . . . . . . . . . . . .  TYPEDEF ------- INT   -------     2
GPIO_struct. . . . . . . . . . . . . . * TAG *  ----- STRUCT  -------     5
  ODR. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000000H     1
  IDR. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000001H     1
  DDR. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000002H     1
  CR1. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000003H     1
  CR2. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000004H     1
GPIO_TypeDef . . . . . . . . . . . . .  TYPEDEF ------- STRUCT   -------     5
  ODR. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000000H     1
  IDR. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000001H     1
  DDR. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000002H     1
  CR1. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000003H     1
  CR2. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000004H     1
ADC2_struct. . . . . . . . . . . . . . * TAG *  ----- STRUCT  -------     8
  CSR. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000000H     1
  CR1. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000001H     1
  CR2. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000002H     1
  RESERVED . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000003H     1
  DRH. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000004H     1
  DRL. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000005H     1
  TDRH . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000006H     1
  TDRL . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000007H     1
ADC2_TypeDef . . . . . . . . . . . . .  TYPEDEF ------- STRUCT   -------     8
  CSR. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000000H     1
  CR1. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000001H     1
  CR2. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000002H     1
  RESERVED . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000003H     1
  DRH. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000004H     1
  DRL. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000005H     1
  TDRH . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000006H     1
  TDRL . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000007H     1
AWU_struct . . . . . . . . . . . . . . * TAG *  ----- STRUCT  -------     3
  CSR. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000000H     1
  APR. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000001H     1
  TBR. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000002H     1
AWU_TypeDef. . . . . . . . . . . . . .  TYPEDEF ------- STRUCT   -------     3
  CSR. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000000H     1
  APR. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000001H     1
  TBR. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000002H     1
BEEP_struct. . . . . . . . . . . . . . * TAG *  ----- STRUCT  -------     1
  CSR. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000000H     1
BEEP_TypeDef . . . . . . . . . . . . .  TYPEDEF ------- STRUCT   -------     1
  CSR. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000000H     1
CLK_struct . . . . . . . . . . . . . . * TAG *  ----- STRUCT  -------    14
  ICKR . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000000H     1
  ECKR . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000001H     1
  RESERVED . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000002H     1
  CMSR . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000003H     1
  SWR. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000004H     1
  SWCR . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000005H     1
  CKDIVR . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000006H     1
  PCKENR1. . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000007H     1
  CSSR . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000008H     1
  CCOR . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000009H     1
  PCKENR2. . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  00000AH     1
  RESERVED1. . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  00000BH     1
  HSITRIMR . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  00000CH     1
  SWIMCCR. . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  00000DH     1
CLK_TypeDef. . . . . . . . . . . . . .  TYPEDEF ------- STRUCT   -------    14
  ICKR . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000000H     1
  ECKR . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000001H     1
  RESERVED . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000002H     1
  CMSR . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000003H     1
  SWR. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000004H     1
  SWCR . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000005H     1
  CKDIVR . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000006H     1
  PCKENR1. . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000007H     1
  CSSR . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000008H     1
  CCOR . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000009H     1
  PCKENR2. . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  00000AH     1
  RESERVED1. . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  00000BH     1
  HSITRIMR . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  00000CH     1
  SWIMCCR. . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  00000DH     1
TIM1_struct. . . . . . . . . . . . . . * TAG *  ----- STRUCT  -------    32
  CR1. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000000H     1
  CR2. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000001H     1
  SMCR . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000002H     1
  ETR. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000003H     1
  IER. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000004H     1
  SR1. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000005H     1
  SR2. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000006H     1
  EGR. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000007H     1
  CCMR1. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000008H     1
  CCMR2. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000009H     1
  CCMR3. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  00000AH     1
  CCMR4. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  00000BH     1
  CCER1. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  00000CH     1
  CCER2. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  00000DH     1
  CNTRH. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  00000EH     1
  CNTRL. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  00000FH     1
  PSCRH. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000010H     1
  PSCRL. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000011H     1
  ARRH . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000012H     1
  ARRL . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000013H     1
  RCR. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000014H     1
  CCR1H. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000015H     1
  CCR1L. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000016H     1
  CCR2H. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000017H     1
  CCR2L. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000018H     1
  CCR3H. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000019H     1
  CCR3L. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  00001AH     1
  CCR4H. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  00001BH     1
  CCR4L. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  00001CH     1
  BKR. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  00001DH     1
  DTR. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  00001EH     1
  OISR . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  00001FH     1
TIM1_TypeDef . . . . . . . . . . . . .  TYPEDEF ------- STRUCT   -------    32
  CR1. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000000H     1
  CR2. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000001H     1
  SMCR . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000002H     1
  ETR. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000003H     1
  IER. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000004H     1
  SR1. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000005H     1
  SR2. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000006H     1
  EGR. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000007H     1
  CCMR1. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000008H     1
  CCMR2. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000009H     1
  CCMR3. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  00000AH     1
  CCMR4. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  00000BH     1
  CCER1. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  00000CH     1
  CCER2. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  00000DH     1
  CNTRH. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  00000EH     1
  CNTRL. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  00000FH     1
  PSCRH. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000010H     1
  PSCRL. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000011H     1
  ARRH . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000012H     1
  ARRL . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000013H     1
  RCR. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000014H     1
  CCR1H. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000015H     1
  CCR1L. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000016H     1
  CCR2H. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000017H     1
  CCR2L. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000018H     1
  CCR3H. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000019H     1
  CCR3L. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  00001AH     1
  CCR4H. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  00001BH     1
  CCR4L. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  00001CH     1
  BKR. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  00001DH     1
  DTR. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  00001EH     1
  OISR . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  00001FH     1
TIM2_struct. . . . . . . . . . . . . . * TAG *  ----- STRUCT  -------    21
  CR1. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000000H     1
  IER. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000001H     1
  SR1. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000002H     1
  SR2. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000003H     1
  EGR. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000004H     1
  CCMR1. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000005H     1
  CCMR2. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000006H     1
  CCMR3. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000007H     1
  CCER1. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000008H     1
  CCER2. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000009H     1
  CNTRH. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  00000AH     1
  CNTRL. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  00000BH     1
  PSCR . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  00000CH     1
  ARRH . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  00000DH     1
  ARRL . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  00000EH     1
  CCR1H. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  00000FH     1
  CCR1L. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000010H     1
  CCR2H. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000011H     1
  CCR2L. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000012H     1
  CCR3H. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000013H     1
  CCR3L. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000014H     1
TIM2_TypeDef . . . . . . . . . . . . .  TYPEDEF ------- STRUCT   -------    21
  CR1. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000000H     1
  IER. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000001H     1
  SR1. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000002H     1
  SR2. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000003H     1
  EGR. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000004H     1
  CCMR1. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000005H     1
  CCMR2. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000006H     1
  CCMR3. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000007H     1
  CCER1. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000008H     1
  CCER2. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000009H     1
  CNTRH. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  00000AH     1
  CNTRL. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  00000BH     1
  PSCR . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  00000CH     1
  ARRH . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  00000DH     1
  ARRL . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  00000EH     1
  CCR1H. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  00000FH     1
  CCR1L. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000010H     1
  CCR2H. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000011H     1
  CCR2L. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000012H     1
  CCR3H. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000013H     1
  CCR3L. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000014H     1
TIM3_struct. . . . . . . . . . . . . . * TAG *  ----- STRUCT  -------    17
  CR1. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000000H     1
  IER. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000001H     1
  SR1. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000002H     1
  SR2. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000003H     1
  EGR. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000004H     1
  CCMR1. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000005H     1
  CCMR2. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000006H     1
  CCER1. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000007H     1
  CNTRH. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000008H     1
  CNTRL. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000009H     1
  PSCR . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  00000AH     1
  ARRH . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  00000BH     1
  ARRL . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  00000CH     1
  CCR1H. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  00000DH     1
  CCR1L. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  00000EH     1
  CCR2H. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  00000FH     1
  CCR2L. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000010H     1
TIM3_TypeDef . . . . . . . . . . . . .  TYPEDEF ------- STRUCT   -------    17
  CR1. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000000H     1
  IER. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000001H     1
  SR1. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000002H     1
  SR2. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000003H     1
  EGR. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000004H     1
  CCMR1. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000005H     1
  CCMR2. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000006H     1
  CCER1. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000007H     1
  CNTRH. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000008H     1
  CNTRL. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000009H     1
  PSCR . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  00000AH     1
  ARRH . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  00000BH     1
  ARRL . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  00000CH     1
  CCR1H. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  00000DH     1
  CCR1L. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  00000EH     1
  CCR2H. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  00000FH     1
  CCR2L. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000010H     1
TIM4_struct. . . . . . . . . . . . . . * TAG *  ----- STRUCT  -------     7
  CR1. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000000H     1
  IER. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000001H     1
  SR1. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000002H     1
  EGR. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000003H     1
  CNTR . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000004H     1
  PSCR . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000005H     1
  ARR. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000006H     1
TIM4_TypeDef . . . . . . . . . . . . .  TYPEDEF ------- STRUCT   -------     7
  CR1. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000000H     1
  IER. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000001H     1
  SR1. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000002H     1
  EGR. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000003H     1
  CNTR . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000004H     1
  PSCR . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000005H     1
  ARR. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000006H     1
TIM5_struct. . . . . . . . . . . . . . * TAG *  ----- STRUCT  -------    23
  CR1. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000000H     1
  CR2. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000001H     1
  SMCR . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000002H     1
  IER. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000003H     1
  SR1. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000004H     1
  SR2. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000005H     1
  EGR. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000006H     1
  CCMR1. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000007H     1
  CCMR2. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000008H     1
  CCMR3. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000009H     1
  CCER1. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  00000AH     1
  CCER2. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  00000BH     1
  CNTRH. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  00000CH     1
  CNTRL. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  00000DH     1
  PSCR . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  00000EH     1
  ARRH . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  00000FH     1
  ARRL . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000010H     1
  CCR1H. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000011H     1
  CCR1L. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000012H     1
  CCR2H. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000013H     1
  CCR2L. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000014H     1
  CCR3H. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000015H     1
  CCR3L. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000016H     1
TIM5_TypeDef . . . . . . . . . . . . .  TYPEDEF ------- STRUCT   -------    23
  CR1. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000000H     1
  CR2. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000001H     1
  SMCR . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000002H     1
  IER. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000003H     1
  SR1. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000004H     1
  SR2. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000005H     1
  EGR. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000006H     1
  CCMR1. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000007H     1
  CCMR2. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000008H     1
  CCMR3. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000009H     1
  CCER1. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  00000AH     1
  CCER2. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  00000BH     1
  CNTRH. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  00000CH     1
  CNTRL. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  00000DH     1
  PSCR . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  00000EH     1
  ARRH . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  00000FH     1
  ARRL . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000010H     1
  CCR1H. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000011H     1
  CCR1L. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000012H     1
  CCR2H. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000013H     1
  CCR2L. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000014H     1
  CCR3H. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000015H     1
  CCR3L. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000016H     1
TIM6_struct. . . . . . . . . . . . . . * TAG *  ----- STRUCT  -------     9
  CR1. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000000H     1
  CR2. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000001H     1
  SMCR . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000002H     1
  IER. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000003H     1
  SR1. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000004H     1
  EGR. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000005H     1
  CNTR . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000006H     1
  PSCR . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000007H     1
  ARR. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000008H     1
TIM6_TypeDef . . . . . . . . . . . . .  TYPEDEF ------- STRUCT   -------     9
  CR1. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000000H     1
  CR2. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000001H     1
  SMCR . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000002H     1
  IER. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000003H     1
  SR1. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000004H     1
  EGR. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000005H     1
  CNTR . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000006H     1
  PSCR . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000007H     1
  ARR. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000008H     1
I2C_struct . . . . . . . . . . . . . . * TAG *  ----- STRUCT  -------    15
  CR1. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000000H     1
  CR2. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000001H     1
  FREQR. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000002H     1
  OARL . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000003H     1
  OARH . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000004H     1
  RESERVED1. . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000005H     1
  DR . . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000006H     1
  SR1. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000007H     1
  SR2. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000008H     1
  SR3. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000009H     1
  ITR. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  00000AH     1
  CCRL . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  00000BH     1
  CCRH . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  00000CH     1
  TRISER . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  00000DH     1
  RESERVED2. . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  00000EH     1
I2C_TypeDef. . . . . . . . . . . . . .  TYPEDEF ------- STRUCT   -------    15
  CR1. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000000H     1
  CR2. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000001H     1
  FREQR. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000002H     1
  OARL . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000003H     1
  OARH . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000004H     1
  RESERVED1. . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000005H     1
  DR . . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000006H     1
  SR1. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000007H     1
  SR2. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000008H     1
  SR3. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000009H     1
  ITR. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  00000AH     1
  CCRL . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  00000BH     1
  CCRH . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  00000CH     1
  TRISER . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  00000DH     1
  RESERVED2. . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  00000EH     1
ITC_struct . . . . . . . . . . . . . . * TAG *  ----- STRUCT  -------     8
  ISPR1. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000000H     1
  ISPR2. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000001H     1
  ISPR3. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000002H     1
  ISPR4. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000003H     1
  ISPR5. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000004H     1
  ISPR6. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000005H     1
  ISPR7. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000006H     1
  ISPR8. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000007H     1
ITC_TypeDef. . . . . . . . . . . . . .  TYPEDEF ------- STRUCT   -------     8
  ISPR1. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000000H     1
  ISPR2. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000001H     1
  ISPR3. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000002H     1
  ISPR4. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000003H     1
  ISPR5. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000004H     1
  ISPR6. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000005H     1
  ISPR7. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000006H     1
  ISPR8. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000007H     1
EXTI_struct. . . . . . . . . . . . . . * TAG *  ----- STRUCT  -------     2
  CR1. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000000H     1
  CR2. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000001H     1
EXTI_TypeDef . . . . . . . . . . . . .  TYPEDEF ------- STRUCT   -------     2
  CR1. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000000H     1
  CR2. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000001H     1
FLASH_struct . . . . . . . . . . . . . * TAG *  ----- STRUCT  -------    11
  CR1. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000000H     1
  CR2. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000001H     1
  NCR2 . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000002H     1
  FPR. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000003H     1
  NFPR . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000004H     1
  IAPSR. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000005H     1
  RESERVED1. . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000006H     1
  RESERVED2. . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000007H     1
  PUKR . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000008H     1
  RESERVED3. . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000009H     1
  DUKR . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  00000AH     1
FLASH_TypeDef. . . . . . . . . . . . .  TYPEDEF ------- STRUCT   -------    11
  CR1. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000000H     1
  CR2. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000001H     1
  NCR2 . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000002H     1
  FPR. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000003H     1
  NFPR . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000004H     1
  IAPSR. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000005H     1
  RESERVED1. . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000006H     1
  RESERVED2. . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000007H     1
  PUKR . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000008H     1
  RESERVED3. . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000009H     1
  DUKR . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  00000AH     1
OPT_struct . . . . . . . . . . . . . . * TAG *  ----- STRUCT  -------    15
  OPT0 . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000000H     1
  OPT1 . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000001H     1
  NOPT1. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000002H     1
  OPT2 . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000003H     1
  NOPT2. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000004H     1
  OPT3 . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000005H     1
  NOPT3. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000006H     1
  OPT4 . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000007H     1
  NOPT4. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000008H     1
  OPT5 . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000009H     1
  NOPT5. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  00000AH     1
  RESERVED1. . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  00000BH     1
  RESERVED2. . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  00000CH     1
  OPT7 . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  00000DH     1
  NOPT7. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  00000EH     1
OPT_TypeDef. . . . . . . . . . . . . .  TYPEDEF ------- STRUCT   -------    15
  OPT0 . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000000H     1
  OPT1 . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000001H     1
  NOPT1. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000002H     1
  OPT2 . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000003H     1
  NOPT2. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000004H     1
  OPT3 . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000005H     1
  NOPT3. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000006H     1
  OPT4 . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000007H     1
  NOPT4. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000008H     1
  OPT5 . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000009H     1
  NOPT5. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  00000AH     1
  RESERVED1. . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  00000BH     1
  RESERVED2. . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  00000CH     1
  OPT7 . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  00000DH     1
  NOPT7. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  00000EH     1
IWDG_struct. . . . . . . . . . . . . . * TAG *  ----- STRUCT  -------     3
  KR . . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000000H     1
  PR . . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000001H     1
  RLR. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000002H     1
IWDG_TypeDef . . . . . . . . . . . . .  TYPEDEF ------- STRUCT   -------     3
  KR . . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000000H     1
  PR . . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000001H     1
  RLR. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000002H     1
WWDG_struct. . . . . . . . . . . . . . * TAG *  ----- STRUCT  -------     2
  CR . . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000000H     1
  WR . . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000001H     1
WWDG_TypeDef . . . . . . . . . . . . .  TYPEDEF ------- STRUCT   -------     2
  CR . . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000000H     1
  WR . . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000001H     1
RST_struct . . . . . . . . . . . . . . * TAG *  ----- STRUCT  -------     1
  SR . . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000000H     1
RST_TypeDef. . . . . . . . . . . . . .  TYPEDEF ------- STRUCT   -------     1
  SR . . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000000H     1
SPI_struct . . . . . . . . . . . . . . * TAG *  ----- STRUCT  -------     8
  CR1. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000000H     1
  CR2. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000001H     1
  ICR. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000002H     1
  SR . . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000003H     1
  DR . . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000004H     1
  CRCPR. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000005H     1
  RXCRCR . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000006H     1
  TXCRCR . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000007H     1
SPI_TypeDef. . . . . . . . . . . . . .  TYPEDEF ------- STRUCT   -------     8
  CR1. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000000H     1
  CR2. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000001H     1
  ICR. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000002H     1
  SR . . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000003H     1
  DR . . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000004H     1
  CRCPR. . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000005H     1
  RXCRCR . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000006H     1
  TXCRCR . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000007H     1
UART1_struct . . . . . . . . . . . . . * TAG *  ----- STRUCT  -------    11
  SR . . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000000H     1
  DR . . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000001H     1
  BRR1 . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000002H     1
  BRR2 . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000003H     1
  CR1. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000004H     1
  CR2. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000005H     1
  CR3. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000006H     1
  CR4. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000007H     1
  CR5. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000008H     1
  GTR. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000009H     1
  PSCR . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  00000AH     1
UART1_TypeDef. . . . . . . . . . . . .  TYPEDEF ------- STRUCT   -------    11
  SR . . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000000H     1
  DR . . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000001H     1
  BRR1 . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000002H     1
  BRR2 . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000003H     1
  CR1. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000004H     1
  CR2. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000005H     1
  CR3. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000006H     1
  CR4. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000007H     1
  CR5. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000008H     1
  GTR. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000009H     1
  PSCR . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  00000AH     1
UART2_struct . . . . . . . . . . . . . * TAG *  ----- STRUCT  -------    12
  SR . . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000000H     1
  DR . . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000001H     1
  BRR1 . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000002H     1
  BRR2 . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000003H     1
  CR1. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000004H     1
  CR2. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000005H     1
  CR3. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000006H     1
  CR4. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000007H     1
  CR5. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000008H     1
  CR6. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000009H     1
  GTR. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  00000AH     1
  PSCR . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  00000BH     1
UART2_TypeDef. . . . . . . . . . . . .  TYPEDEF ------- STRUCT   -------    12
  SR . . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000000H     1
  DR . . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000001H     1
  BRR1 . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000002H     1
  BRR2 . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000003H     1
  CR1. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000004H     1
  CR2. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000005H     1
  CR3. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000006H     1
  CR4. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000007H     1
  CR5. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000008H     1
  CR6. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000009H     1
  GTR. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  00000AH     1
  PSCR . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  00000BH     1
UART3_struct . . . . . . . . . . . . . * TAG *  ----- STRUCT  -------    10
  SR . . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000000H     1
  DR . . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000001H     1
  BRR1 . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000002H     1
  BRR2 . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000003H     1
  CR1. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000004H     1
  CR2. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000005H     1
  CR3. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000006H     1
  CR4. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000007H     1
  RESERVED . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000008H     1
  CR6. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000009H     1
UART3_TypeDef. . . . . . . . . . . . .  TYPEDEF ------- STRUCT   -------    10
  SR . . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000000H     1
  DR . . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000001H     1
  BRR1 . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000002H     1
  BRR2 . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000003H     1
  CR1. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000004H     1
  CR2. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000005H     1
  CR3. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000006H     1
  CR4. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000007H     1
  RESERVED . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000008H     1
  CR6. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000009H     1
CAN_TypeDef. . . . . . . . . . . . . .  TYPEDEF ------- STRUCT   -------    24
  MCR. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000000H     1
  MSR. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000001H     1
  TSR. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000002H     1
  TPR. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000003H     1
  RFR. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000004H     1
  IER. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000005H     1
  DGR. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000006H     1
  PSR. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000007H     1
  Page . . . . . . . . . . . . . . . .  MEMBER  -----   UNION   000008H    16
CFG_struct . . . . . . . . . . . . . . * TAG *  ----- STRUCT  -------     1
  GCR. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000000H     1
CFG_TypeDef. . . . . . . . . . . . . .  TYPEDEF ------- STRUCT   -------     1
  GCR. . . . . . . . . . . . . . . . .  MEMBER  -----   U_CHAR  000000H     1
CLK_SWITCHMODE_MANUAL. . . . . . . . . E_CONST  ----- INT      -------  2
CLK_SWITCHMODE_AUTO. . . . . . . . . . E_CONST  ----- INT      -------  2
CLK_SwitchMode_TypeDef . . . . . . . .  TYPEDEF ------- INT   -------     2
CLK_CURRENTCLOCKSTATE_DISABLE. . . . . E_CONST  ----- INT      -------  2
CLK_CURRENTCLOCKSTATE_ENABLE . . . . . E_CONST  ----- INT      -------  2
CLK_CurrentClockState_TypeDef. . . . .  TYPEDEF ------- INT   -------     2
CLK_CSSCONFIG_ENABLEWITHIT . . . . . . E_CONST  ----- INT      -------  2
CLK_CSSCONFIG_ENABLE . . . . . . . . . E_CONST  ----- INT      -------  2
CLK_CSSCONFIG_DISABLE. . . . . . . . . E_CONST  ----- INT      -------  2
CLK_CSSConfig_TypeDef. . . . . . . . .  TYPEDEF ------- INT   -------     2
CLK_SOURCE_HSI . . . . . . . . . . . . E_CONST  ----- INT      -------  2
CLK_SOURCE_LSI . . . . . . . . . . . . E_CONST  ----- INT      -------  2
CLK_SOURCE_HSE . . . . . . . . . . . . E_CONST  ----- INT      -------  2
CLK_Source_TypeDef . . . . . . . . . .  TYPEDEF ------- INT   -------     2
CLK_HSITRIMVALUE_0 . . . . . . . . . . E_CONST  ----- INT      -------  2
CLK_HSITRIMVALUE_1 . . . . . . . . . . E_CONST  ----- INT      -------  2
CLK_HSITRIMVALUE_2 . . . . . . . . . . E_CONST  ----- INT      -------  2
CLK_HSITRIMVALUE_3 . . . . . . . . . . E_CONST  ----- INT      -------  2
CLK_HSITRIMVALUE_4 . . . . . . . . . . E_CONST  ----- INT      -------  2
CLK_HSITRIMVALUE_5 . . . . . . . . . . E_CONST  ----- INT      -------  2
CLK_HSITRIMVALUE_6 . . . . . . . . . . E_CONST  ----- INT      -------  2
CLK_HSITRIMVALUE_7 . . . . . . . . . . E_CONST  ----- INT      -------  2
CLK_HSITrimValue_TypeDef . . . . . . .  TYPEDEF ------- INT   -------     2
CLK_OUTPUT_HSI . . . . . . . . . . . . E_CONST  ----- INT      -------  2
CLK_OUTPUT_LSI . . . . . . . . . . . . E_CONST  ----- INT      -------  2
CLK_OUTPUT_HSE . . . . . . . . . . . . E_CONST  ----- INT      -------  2
CLK_OUTPUT_CPU . . . . . . . . . . . . E_CONST  ----- INT      -------  2
CLK_OUTPUT_CPUDIV2 . . . . . . . . . . E_CONST  ----- INT      -------  2
CLK_OUTPUT_CPUDIV4 . . . . . . . . . . E_CONST  ----- INT      -------  2
CLK_OUTPUT_CPUDIV8 . . . . . . . . . . E_CONST  ----- INT      -------  2
CLK_OUTPUT_CPUDIV16. . . . . . . . . . E_CONST  ----- INT      -------  2
CLK_OUTPUT_CPUDIV32. . . . . . . . . . E_CONST  ----- INT      -------  2
CLK_OUTPUT_CPUDIV64. . . . . . . . . . E_CONST  ----- INT      -------  2
CLK_OUTPUT_HSIRC . . . . . . . . . . . E_CONST  ----- INT      -------  2
CLK_OUTPUT_MASTER. . . . . . . . . . . E_CONST  ----- INT      -------  2
CLK_OUTPUT_OTHERS. . . . . . . . . . . E_CONST  ----- INT      -------  2
CLK_Output_TypeDef . . . . . . . . . .  TYPEDEF ------- INT   -------     2
CLK_PERIPHERAL_I2C . . . . . . . . . . E_CONST  ----- INT      -------  2
CLK_PERIPHERAL_SPI . . . . . . . . . . E_CONST  ----- INT      -------  2
CLK_PERIPHERAL_UART1 . . . . . . . . . E_CONST  ----- INT      -------  2
CLK_PERIPHERAL_UART2 . . . . . . . . . E_CONST  ----- INT      -------  2
CLK_PERIPHERAL_UART3 . . . . . . . . . E_CONST  ----- INT      -------  2
CLK_PERIPHERAL_TIMER6. . . . . . . . . E_CONST  ----- INT      -------  2
CLK_PERIPHERAL_TIMER4. . . . . . . . . E_CONST  ----- INT      -------  2
CLK_PERIPHERAL_TIMER5. . . . . . . . . E_CONST  ----- INT      -------  2
CLK_PERIPHERAL_TIMER2. . . . . . . . . E_CONST  ----- INT      -------  2
CLK_PERIPHERAL_TIMER3. . . . . . . . . E_CONST  ----- INT      -------  2
CLK_PERIPHERAL_TIMER1. . . . . . . . . E_CONST  ----- INT      -------  2
CLK_PERIPHERAL_AWU . . . . . . . . . . E_CONST  ----- INT      -------  2
CLK_PERIPHERAL_ADC . . . . . . . . . . E_CONST  ----- INT      -------  2
CLK_PERIPHERAL_CAN . . . . . . . . . . E_CONST  ----- INT      -------  2
CLK_Peripheral_TypeDef . . . . . . . .  TYPEDEF ------- INT   -------     2
CLK_FLAG_LSIRDY. . . . . . . . . . . . E_CONST  ----- INT      -------  2
CLK_FLAG_HSIRDY. . . . . . . . . . . . E_CONST  ----- INT      -------  2
CLK_FLAG_HSERDY. . . . . . . . . . . . E_CONST  ----- INT      -------  2
CLK_FLAG_SWIF. . . . . . . . . . . . . E_CONST  ----- INT      -------  2
CLK_FLAG_SWBSY . . . . . . . . . . . . E_CONST  ----- INT      -------  2
CLK_FLAG_CSSD. . . . . . . . . . . . . E_CONST  ----- INT      -------  2
CLK_FLAG_AUX . . . . . . . . . . . . . E_CONST  ----- INT      -------  2
CLK_FLAG_CCOBSY. . . . . . . . . . . . E_CONST  ----- INT      -------  2
CLK_FLAG_CCORDY. . . . . . . . . . . . E_CONST  ----- INT      -------  2
CLK_Flag_TypeDef . . . . . . . . . . .  TYPEDEF ------- INT   -------     2
CLK_IT_CSSD. . . . . . . . . . . . . . E_CONST  ----- INT      -------  2
CLK_IT_SWIF. . . . . . . . . . . . . . E_CONST  ----- INT      -------  2
CLK_IT_TypeDef . . . . . . . . . . . .  TYPEDEF ------- INT   -------     2
CLK_PRESCALER_HSIDIV1. . . . . . . . . E_CONST  ----- INT      -------  2
CLK_PRESCALER_HSIDIV2. . . . . . . . . E_CONST  ----- INT      -------  2
CLK_PRESCALER_HSIDIV4. . . . . . . . . E_CONST  ----- INT      -------  2
CLK_PRESCALER_HSIDIV8. . . . . . . . . E_CONST  ----- INT      -------  2
CLK_PRESCALER_CPUDIV1. . . . . . . . . E_CONST  ----- INT      -------  2
CLK_PRESCALER_CPUDIV2. . . . . . . . . E_CONST  ----- INT      -------  2
CLK_PRESCALER_CPUDIV4. . . . . . . . . E_CONST  ----- INT      -------  2
CLK_PRESCALER_CPUDIV8. . . . . . . . . E_CONST  ----- INT      -------  2
CLK_PRESCALER_CPUDIV16 . . . . . . . . E_CONST  ----- INT      -------  2
CLK_PRESCALER_CPUDIV32 . . . . . . . . E_CONST  ----- INT      -------  2
CLK_PRESCALER_CPUDIV64 . . . . . . . . E_CONST  ----- INT      -------  2
CLK_PRESCALER_CPUDIV128. . . . . . . . E_CONST  ----- INT      -------  2
CLK_Prescaler_TypeDef. . . . . . . . .  TYPEDEF ------- INT   -------     2
CLK_SWIMDIVIDER_2. . . . . . . . . . . E_CONST  ----- INT      -------  2
CLK_SWIMDIVIDER_OTHER. . . . . . . . . E_CONST  ----- INT      -------  2
CLK_SWIMDivider_TypeDef. . . . . . . .  TYPEDEF ------- INT   -------     2
CLK_DeInit . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
CLK_HSECmd . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
CLK_HSICmd . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
CLK_LSICmd . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
CLK_CCOCmd . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
CLK_ClockSwitchCmd . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
CLK_FastHaltWakeUpCmd. . . . . . . . .  EXTERN  CODE    PROC    ------- -----
CLK_SlowActiveHaltWakeUpCmd. . . . . .  EXTERN  CODE    PROC    ------- -----
CLK_PeripheralClockConfig. . . . . . .  EXTERN  CODE    PROC    ------- -----
CLK_ClockSwitchConfig. . . . . . . . .  EXTERN  CODE    PROC    ------- -----
CLK_HSIPrescalerConfig . . . . . . . .  EXTERN  CODE    PROC    ------- -----
CLK_CCOConfig. . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
CLK_ITConfig . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
CLK_SYSCLKConfig . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
CLK_SWIMConfig . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
CLK_ClockSecuritySystemEnable. . . . .  EXTERN  CODE    PROC    ------- -----
CLK_SYSCLKEmergencyClear . . . . . . .  EXTERN  CODE    PROC    ------- -----
CLK_AdjustHSICalibrationValue. . . . .  EXTERN  CODE    PROC    ------- -----
CLK_GetClockFreq . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
CLK_GetSYSCLKSource. . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
CLK_GetFlagStatus. . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
CLK_GetITStatus. . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
CLK_ClearITPendingBit. . . . . . . . .  EXTERN  CODE    PROC    ------- -----
EXTI_SENSITIVITY_FALL_LOW. . . . . . . E_CONST  ----- INT      -------  2
EXTI_SENSITIVITY_RISE_ONLY . . . . . . E_CONST  ----- INT      -------  2
EXTI_SENSITIVITY_FALL_ONLY . . . . . . E_CONST  ----- INT      -------  2
EXTI_SENSITIVITY_RISE_FALL . . . . . . E_CONST  ----- INT      -------  2
EXTI_Sensitivity_TypeDef . . . . . . .  TYPEDEF ------- INT   -------     2
EXTI_TLISENSITIVITY_FALL_ONLY. . . . . E_CONST  ----- INT      -------  2
EXTI_TLISENSITIVITY_RISE_ONLY. . . . . E_CONST  ----- INT      -------  2
EXTI_TLISensitivity_TypeDef. . . . . .  TYPEDEF ------- INT   -------     2
EXTI_PORT_GPIOA. . . . . . . . . . . . E_CONST  ----- INT      -------  2
EXTI_PORT_GPIOB. . . . . . . . . . . . E_CONST  ----- INT      -------  2
EXTI_PORT_GPIOC. . . . . . . . . . . . E_CONST  ----- INT      -------  2
EXTI_PORT_GPIOD. . . . . . . . . . . . E_CONST  ----- INT      -------  2
EXTI_PORT_GPIOE. . . . . . . . . . . . E_CONST  ----- INT      -------  2
EXTI_Port_TypeDef. . . . . . . . . . .  TYPEDEF ------- INT   -------     2
EXTI_DeInit. . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
EXTI_SetExtIntSensitivity. . . . . . .  EXTERN  CODE    PROC    ------- -----
EXTI_SetTLISensitivity . . . . . . . .  EXTERN  CODE    PROC    ------- -----
EXTI_GetExtIntSensitivity. . . . . . .  EXTERN  CODE    PROC    ------- -----
EXTI_GetTLISensitivity . . . . . . . .  EXTERN  CODE    PROC    ------- -----
GPIO_MODE_IN_FL_NO_IT. . . . . . . . . E_CONST  ----- INT      -------  2
GPIO_MODE_IN_PU_NO_IT. . . . . . . . . E_CONST  ----- INT      -------  2
GPIO_MODE_IN_FL_IT . . . . . . . . . . E_CONST  ----- INT      -------  2
GPIO_MODE_IN_PU_IT . . . . . . . . . . E_CONST  ----- INT      -------  2
GPIO_MODE_OUT_OD_LOW_FAST. . . . . . . E_CONST  ----- INT      -------  2
GPIO_MODE_OUT_PP_LOW_FAST. . . . . . . E_CONST  ----- INT      -------  2
GPIO_MODE_OUT_OD_LOW_SLOW. . . . . . . E_CONST  ----- INT      -------  2
GPIO_MODE_OUT_PP_LOW_SLOW. . . . . . . E_CONST  ----- INT      -------  2
GPIO_MODE_OUT_OD_HIZ_FAST. . . . . . . E_CONST  ----- INT      -------  2
GPIO_MODE_OUT_PP_HIGH_FAST . . . . . . E_CONST  ----- INT      -------  2
GPIO_MODE_OUT_OD_HIZ_SLOW. . . . . . . E_CONST  ----- INT      -------  2
GPIO_MODE_OUT_PP_HIGH_SLOW . . . . . . E_CONST  ----- INT      -------  2
GPIO_Mode_TypeDef. . . . . . . . . . .  TYPEDEF ------- INT   -------     2
GPIO_PIN_0 . . . . . . . . . . . . . . E_CONST  ----- INT      -------  2
GPIO_PIN_1 . . . . . . . . . . . . . . E_CONST  ----- INT      -------  2
GPIO_PIN_2 . . . . . . . . . . . . . . E_CONST  ----- INT      -------  2
GPIO_PIN_3 . . . . . . . . . . . . . . E_CONST  ----- INT      -------  2
GPIO_PIN_4 . . . . . . . . . . . . . . E_CONST  ----- INT      -------  2
GPIO_PIN_5 . . . . . . . . . . . . . . E_CONST  ----- INT      -------  2
GPIO_PIN_6 . . . . . . . . . . . . . . E_CONST  ----- INT      -------  2
GPIO_PIN_7 . . . . . . . . . . . . . . E_CONST  ----- INT      -------  2
GPIO_PIN_LNIB. . . . . . . . . . . . . E_CONST  ----- INT      -------  2
GPIO_PIN_HNIB. . . . . . . . . . . . . E_CONST  ----- INT      -------  2
GPIO_PIN_ALL . . . . . . . . . . . . . E_CONST  ----- INT      -------  2
GPIO_Pin_TypeDef . . . . . . . . . . .  TYPEDEF ------- INT   -------     2
GPIO_DeInit. . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
GPIO_Init. . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
GPIO_Write . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
GPIO_WriteHigh . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
GPIO_WriteLow. . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
GPIO_WriteReverse. . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
GPIO_ReadInputData . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
GPIO_ReadOutputData. . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
GPIO_ReadInputPin. . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
GPIO_ExternalPullUpConfig. . . . . . .  EXTERN  CODE    PROC    ------- -----
SPI_DATADIRECTION_2LINES_FULLDUPLEX. . E_CONST  ----- INT      -------  2
SPI_DATADIRECTION_2LINES_RXONLY. . . . E_CONST  ----- INT      -------  2
SPI_DATADIRECTION_1LINE_RX . . . . . . E_CONST  ----- INT      -------  2
SPI_DATADIRECTION_1LINE_TX . . . . . . E_CONST  ----- INT      -------  2
SPI_DataDirection_TypeDef. . . . . . .  TYPEDEF ------- INT   -------     2
SPI_NSS_SOFT . . . . . . . . . . . . . E_CONST  ----- INT      -------  2
SPI_NSS_HARD . . . . . . . . . . . . . E_CONST  ----- INT      -------  2
SPI_NSS_TypeDef. . . . . . . . . . . .  TYPEDEF ------- INT   -------     2
SPI_DIRECTION_RX . . . . . . . . . . . E_CONST  ----- INT      -------  2
SPI_DIRECTION_TX . . . . . . . . . . . E_CONST  ----- INT      -------  2
SPI_Direction_TypeDef. . . . . . . . .  TYPEDEF ------- INT   -------     2
SPI_MODE_MASTER. . . . . . . . . . . . E_CONST  ----- INT      -------  2
SPI_MODE_SLAVE . . . . . . . . . . . . E_CONST  ----- INT      -------  2
SPI_Mode_TypeDef . . . . . . . . . . .  TYPEDEF ------- INT   -------     2
SPI_BAUDRATEPRESCALER_2. . . . . . . . E_CONST  ----- INT      -------  2
SPI_BAUDRATEPRESCALER_4. . . . . . . . E_CONST  ----- INT      -------  2
SPI_BAUDRATEPRESCALER_8. . . . . . . . E_CONST  ----- INT      -------  2
SPI_BAUDRATEPRESCALER_16 . . . . . . . E_CONST  ----- INT      -------  2
SPI_BAUDRATEPRESCALER_32 . . . . . . . E_CONST  ----- INT      -------  2
SPI_BAUDRATEPRESCALER_64 . . . . . . . E_CONST  ----- INT      -------  2
SPI_BAUDRATEPRESCALER_128. . . . . . . E_CONST  ----- INT      -------  2
SPI_BAUDRATEPRESCALER_256. . . . . . . E_CONST  ----- INT      -------  2
SPI_BaudRatePrescaler_TypeDef. . . . .  TYPEDEF ------- INT   -------     2
SPI_CLOCKPOLARITY_LOW. . . . . . . . . E_CONST  ----- INT      -------  2
SPI_CLOCKPOLARITY_HIGH . . . . . . . . E_CONST  ----- INT      -------  2
SPI_ClockPolarity_TypeDef. . . . . . .  TYPEDEF ------- INT   -------     2
SPI_CLOCKPHASE_1EDGE . . . . . . . . . E_CONST  ----- INT      -------  2
SPI_CLOCKPHASE_2EDGE . . . . . . . . . E_CONST  ----- INT      -------  2
SPI_ClockPhase_TypeDef . . . . . . . .  TYPEDEF ------- INT   -------     2
SPI_FIRSTBIT_MSB . . . . . . . . . . . E_CONST  ----- INT      -------  2
SPI_FIRSTBIT_LSB . . . . . . . . . . . E_CONST  ----- INT      -------  2
SPI_FirstBit_TypeDef . . . . . . . . .  TYPEDEF ------- INT   -------     2
SPI_CRC_RX . . . . . . . . . . . . . . E_CONST  ----- INT      -------  2
SPI_CRC_TX . . . . . . . . . . . . . . E_CONST  ----- INT      -------  2
SPI_CRC_TypeDef. . . . . . . . . . . .  TYPEDEF ------- INT   -------     2
SPI_FLAG_BSY . . . . . . . . . . . . . E_CONST  ----- INT      -------  2
SPI_FLAG_OVR . . . . . . . . . . . . . E_CONST  ----- INT      -------  2
SPI_FLAG_MODF. . . . . . . . . . . . . E_CONST  ----- INT      -------  2
SPI_FLAG_CRCERR. . . . . . . . . . . . E_CONST  ----- INT      -------  2
SPI_FLAG_WKUP. . . . . . . . . . . . . E_CONST  ----- INT      -------  2
SPI_FLAG_TXE . . . . . . . . . . . . . E_CONST  ----- INT      -------  2
SPI_FLAG_RXNE. . . . . . . . . . . . . E_CONST  ----- INT      -------  2
SPI_Flag_TypeDef . . . . . . . . . . .  TYPEDEF ------- INT   -------     2
SPI_IT_WKUP. . . . . . . . . . . . . . E_CONST  ----- INT      -------  2
SPI_IT_OVR . . . . . . . . . . . . . . E_CONST  ----- INT      -------  2
SPI_IT_MODF. . . . . . . . . . . . . . E_CONST  ----- INT      -------  2
SPI_IT_CRCERR. . . . . . . . . . . . . E_CONST  ----- INT      -------  2
SPI_IT_TXE . . . . . . . . . . . . . . E_CONST  ----- INT      -------  2
SPI_IT_RXNE. . . . . . . . . . . . . . E_CONST  ----- INT      -------  2
SPI_IT_ERR . . . . . . . . . . . . . . E_CONST  ----- INT      -------  2
SPI_IT_TypeDef . . . . . . . . . . . .  TYPEDEF ------- INT   -------     2
SPI_DeInit . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
SPI_Init . . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
SPI_Cmd. . . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
SPI_ITConfig . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
SPI_SendData . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
SPI_ReceiveData. . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
SPI_NSSInternalSoftwareCmd . . . . . .  EXTERN  CODE    PROC    ------- -----
SPI_TransmitCRC. . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
SPI_CalculateCRCCmd. . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
SPI_GetCRC . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
SPI_ResetCRC . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
SPI_GetCRCPolynomial . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
SPI_BiDirectionalLineConfig. . . . . .  EXTERN  CODE    PROC    ------- -----
SPI_GetFlagStatus. . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
SPI_ClearFlag. . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
SPI_GetITStatus. . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
SPI_ClearITPendingBit. . . . . . . . .  EXTERN  CODE    PROC    ------- -----
UART3_WAKEUP_IDLELINE. . . . . . . . . E_CONST  ----- INT      -------  2
UART3_WAKEUP_ADDRESSMARK . . . . . . . E_CONST  ----- INT      -------  2
UART3_WakeUp_TypeDef . . . . . . . . .  TYPEDEF ------- INT   -------     2
UART3_LINBREAKDETECTIONLENGTH_10BITS . E_CONST  ----- INT      -------  2
UART3_LINBREAKDETECTIONLENGTH_11BITS . E_CONST  ----- INT      -------  2
UART3_LINBreakDetectionLength_TypeDef.  TYPEDEF ------- INT   -------     2
UART3_STOPBITS_1 . . . . . . . . . . . E_CONST  ----- INT      -------  2
UART3_STOPBITS_2 . . . . . . . . . . . E_CONST  ----- INT      -------  2
UART3_StopBits_TypeDef . . . . . . . .  TYPEDEF ------- INT   -------     2
UART3_PARITY_NO. . . . . . . . . . . . E_CONST  ----- INT      -------  2
UART3_PARITY_EVEN. . . . . . . . . . . E_CONST  ----- INT      -------  2
UART3_PARITY_ODD . . . . . . . . . . . E_CONST  ----- INT      -------  2
UART3_Parity_TypeDef . . . . . . . . .  TYPEDEF ------- INT   -------     2
UART3_WORDLENGTH_8D. . . . . . . . . . E_CONST  ----- INT      -------  2
UART3_WORDLENGTH_9D. . . . . . . . . . E_CONST  ----- INT      -------  2
UART3_WordLength_TypeDef . . . . . . .  TYPEDEF ------- INT   -------     2
UART3_MODE_RX_ENABLE . . . . . . . . . E_CONST  ----- INT      -------  2
UART3_MODE_TX_ENABLE . . . . . . . . . E_CONST  ----- INT      -------  2
UART3_MODE_TX_DISABLE. . . . . . . . . E_CONST  ----- INT      -------  2
UART3_MODE_RX_DISABLE. . . . . . . . . E_CONST  ----- INT      -------  2
UART3_MODE_TXRX_ENABLE . . . . . . . . E_CONST  ----- INT      -------  2
UART3_Mode_TypeDef . . . . . . . . . .  TYPEDEF ------- INT   -------     2
UART3_LIN_MODE_MASTER. . . . . . . . . E_CONST  ----- INT      -------  2
UART3_LIN_MODE_SLAVE . . . . . . . . . E_CONST  ----- INT      -------  2
UART3_LinMode_TypeDef. . . . . . . . .  TYPEDEF ------- INT   -------     2
UART3_LIN_AUTOSYNC_DISABLE . . . . . . E_CONST  ----- INT      -------  2
UART3_LIN_AUTOSYNC_ENABLE. . . . . . . E_CONST  ----- INT      -------  2
UART3_LinAutosync_TypeDef. . . . . . .  TYPEDEF ------- INT   -------     2
UART3_LIN_DIVUP_LBRR1. . . . . . . . . E_CONST  ----- INT      -------  2
UART3_LIN_DIVUP_NEXTRXNE . . . . . . . E_CONST  ----- INT      -------  2
UART3_LinDivUp_TypeDef . . . . . . . .  TYPEDEF ------- INT   -------     2
UART3_FLAG_TXE . . . . . . . . . . . . E_CONST  ----- INT      -------  2
UART3_FLAG_TC. . . . . . . . . . . . . E_CONST  ----- INT      -------  2
UART3_FLAG_RXNE. . . . . . . . . . . . E_CONST  ----- INT      -------  2
UART3_FLAG_IDLE. . . . . . . . . . . . E_CONST  ----- INT      -------  2
UART3_FLAG_OR_LHE. . . . . . . . . . . E_CONST  ----- INT      -------  2
UART3_FLAG_NF. . . . . . . . . . . . . E_CONST  ----- INT      -------  2
UART3_FLAG_FE. . . . . . . . . . . . . E_CONST  ----- INT      -------  2
UART3_FLAG_PE. . . . . . . . . . . . . E_CONST  ----- INT      -------  2
UART3_FLAG_SBK . . . . . . . . . . . . E_CONST  ----- INT      -------  2
UART3_FLAG_LBDF. . . . . . . . . . . . E_CONST  ----- INT      -------  2
UART3_FLAG_LHDF. . . . . . . . . . . . E_CONST  ----- INT      -------  2
UART3_FLAG_LSF . . . . . . . . . . . . E_CONST  ----- INT      -------  2
UART3_Flag_TypeDef . . . . . . . . . .  TYPEDEF ------- INT   -------     2
UART3_IT_TXE . . . . . . . . . . . . . E_CONST  ----- INT      -------  2
UART3_IT_TC. . . . . . . . . . . . . . E_CONST  ----- INT      -------  2
UART3_IT_RXNE. . . . . . . . . . . . . E_CONST  ----- INT      -------  2
UART3_IT_IDLE. . . . . . . . . . . . . E_CONST  ----- INT      -------  2
UART3_IT_OR. . . . . . . . . . . . . . E_CONST  ----- INT      -------  2
UART3_IT_PE. . . . . . . . . . . . . . E_CONST  ----- INT      -------  2
UART3_IT_LBDF. . . . . . . . . . . . . E_CONST  ----- INT      -------  2
UART3_IT_LHDF. . . . . . . . . . . . . E_CONST  ----- INT      -------  2
UART3_IT_RXNE_OR . . . . . . . . . . . E_CONST  ----- INT      -------  2
UART3_IT_TypeDef . . . . . . . . . . .  TYPEDEF ------- INT   -------     2
UART3_DeInit . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
UART3_Init . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
UART3_Cmd. . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
UART3_ITConfig . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
UART3_LINBreakDetectionConfig. . . . .  EXTERN  CODE    PROC    ------- -----
UART3_LINConfig. . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
UART3_LINCmd . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
UART3_ReceiverWakeUpCmd. . . . . . . .  EXTERN  CODE    PROC    ------- -----
UART3_WakeUpConfig . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
UART3_ReceiveData8 . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
UART3_ReceiveData9 . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
UART3_SendData8. . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
UART3_SendData9. . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
UART3_SendBreak. . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
UART3_SetAddress . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
UART3_GetFlagStatus. . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
UART3_ClearFlag. . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
UART3_GetITStatus. . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
UART3_ClearITPendingBit. . . . . . . .  EXTERN  CODE    PROC    ------- -----
assert_failed. . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
_fctptr_t. . . . . . . . . . . . . . .  TYPEDEF ------- PTR     -------     2
_halt_ . . . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
_jmp_. . . . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
_nop_. . . . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
_rim_. . . . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
_sim_. . . . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
_trap_ . . . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
_wfe_. . . . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
_wfi_. . . . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
_getCC_. . . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
_setCC_. . . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
_getSP_. . . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
_setSP_. . . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
_swapbyte_ . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
_swapnibble_ . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
TIM4_PRESCALER_1 . . . . . . . . . . . E_CONST  ----- INT      -------  2
TIM4_PRESCALER_2 . . . . . . . . . . . E_CONST  ----- INT      -------  2
TIM4_PRESCALER_4 . . . . . . . . . . . E_CONST  ----- INT      -------  2
TIM4_PRESCALER_8 . . . . . . . . . . . E_CONST  ----- INT      -------  2
TIM4_PRESCALER_16. . . . . . . . . . . E_CONST  ----- INT      -------  2
TIM4_PRESCALER_32. . . . . . . . . . . E_CONST  ----- INT      -------  2
TIM4_PRESCALER_64. . . . . . . . . . . E_CONST  ----- INT      -------  2
TIM4_PRESCALER_128 . . . . . . . . . . E_CONST  ----- INT      -------  2
TIM4_Prescaler_TypeDef . . . . . . . .  TYPEDEF ------- INT   -------     2
TIM4_OPMODE_SINGLE . . . . . . . . . . E_CONST  ----- INT      -------  2
TIM4_OPMODE_REPETITIVE . . . . . . . . E_CONST  ----- INT      -------  2
TIM4_OPMode_TypeDef. . . . . . . . . .  TYPEDEF ------- INT   -------     2
TIM4_PSCRELOADMODE_UPDATE. . . . . . . E_CONST  ----- INT      -------  2
TIM4_PSCRELOADMODE_IMMEDIATE . . . . . E_CONST  ----- INT      -------  2
TIM4_PSCReloadMode_TypeDef . . . . . .  TYPEDEF ------- INT   -------     2
TIM4_UPDATESOURCE_GLOBAL . . . . . . . E_CONST  ----- INT      -------  2
TIM4_UPDATESOURCE_REGULAR. . . . . . . E_CONST  ----- INT      -------  2
TIM4_UpdateSource_TypeDef. . . . . . .  TYPEDEF ------- INT   -------     2
TIM4_EVENTSOURCE_UPDATE. . . . . . . . E_CONST  ----- INT      -------  2
TIM4_EventSource_TypeDef . . . . . . .  TYPEDEF ------- INT   -------     2
TIM4_FLAG_UPDATE . . . . . . . . . . . E_CONST  ----- INT      -------  2
TIM4_FLAG_TypeDef. . . . . . . . . . .  TYPEDEF ------- INT   -------     2
TIM4_IT_UPDATE . . . . . . . . . . . . E_CONST  ----- INT      -------  2
TIM4_IT_TypeDef. . . . . . . . . . . .  TYPEDEF ------- INT   -------     2
TIM4_DeInit. . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
TIM4_TimeBaseInit. . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
TIM4_Cmd . . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
TIM4_ITConfig. . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
TIM4_UpdateDisableConfig . . . . . . .  EXTERN  CODE    PROC    ------- -----
TIM4_UpdateRequestConfig . . . . . . .  EXTERN  CODE    PROC    ------- -----
TIM4_SelectOnePulseMode. . . . . . . .  EXTERN  CODE    PROC    ------- -----
TIM4_PrescalerConfig . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
TIM4_ARRPreloadConfig. . . . . . . . .  EXTERN  CODE    PROC    ------- -----
TIM4_GenerateEvent . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
TIM4_SetCounter. . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
TIM4_SetAutoreload . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
TIM4_GetCounter. . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
TIM4_GetPrescaler. . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
TIM4_GetFlagStatus . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
TIM4_ClearFlag . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
TIM4_GetITStatus . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
TIM4_ClearITPendingBit . . . . . . . .  EXTERN  CODE    PROC    ------- -----
TIM4_DeInit. . . . . . . . . . . . . .  PUBLIC  CODE    PROC    ------- -----
TIM4_TimeBaseInit. . . . . . . . . . .  PUBLIC  CODE    PROC    ------- -----
 TIM4_Prescaler?213. . . . . . . . . .  PARAM   AUTO    ENUM    000001H     2
 TIM4_Period?214 . . . . . . . . . . .  PARAM   AUTO    U_CHAR  000000H     1
TIM4_Cmd . . . . . . . . . . . . . . .  PUBLIC  CODE    PROC    ------- -----
 NewState?215. . . . . . . . . . . . .  PARAM   AUTO    ENUM    000000H     2
TIM4_ITConfig. . . . . . . . . . . . .  PUBLIC  CODE    PROC    ------- -----
 TIM4_IT?216 . . . . . . . . . . . . .  PARAM   AUTO    ENUM    000000H     2
 NewState?217. . . . . . . . . . . . .  PARAM   AUTO    ENUM    000004H     2
TIM4_UpdateDisableConfig . . . . . . .  PUBLIC  CODE    PROC    ------- -----
 NewState?218. . . . . . . . . . . . .  PARAM   AUTO    ENUM    000000H     2
TIM4_UpdateRequestConfig . . . . . . .  PUBLIC  CODE    PROC    ------- -----
 TIM4_UpdateSource?219 . . . . . . . .  PARAM   AUTO    ENUM    000000H     2
TIM4_SelectOnePulseMode. . . . . . . .  PUBLIC  CODE    PROC    ------- -----
 TIM4_OPMode?220 . . . . . . . . . . .  PARAM   AUTO    ENUM    000000H     2
TIM4_PrescalerConfig . . . . . . . . .  PUBLIC  CODE    PROC    ------- -----
 Prescaler?221 . . . . . . . . . . . .  PARAM   AUTO    ENUM    000000H     2
 TIM4_PSCReloadMode?222. . . . . . . .  PARAM   AUTO    ENUM    000004H     2
TIM4_ARRPreloadConfig. . . . . . . . .  PUBLIC  CODE    PROC    ------- -----
 NewState?223. . . . . . . . . . . . .  PARAM   AUTO    ENUM    000000H     2
TIM4_GenerateEvent . . . . . . . . . .  PUBLIC  CODE    PROC    ------- -----
 TIM4_EventSource?224. . . . . . . . .  PARAM   AUTO    ENUM    000000H     2
TIM4_SetCounter. . . . . . . . . . . .  PUBLIC  CODE    PROC    ------- -----
 Counter?225 . . . . . . . . . . . . .  PARAM   AUTO    U_CHAR  000000H     1
TIM4_SetAutoreload . . . . . . . . . .  PUBLIC  CODE    PROC    ------- -----
 Autoreload?226. . . . . . . . . . . .  PARAM   AUTO    U_CHAR  000000H     1
TIM4_GetCounter. . . . . . . . . . . .  PUBLIC  CODE    PROC    ------- -----
TIM4_GetPrescaler. . . . . . . . . . .  PUBLIC  CODE    PROC    ------- -----
  bitstatus?233. . . . . . . . . . . . E_CONST  ----- INT      -------  2
TIM4_GetFlagStatus . . . . . . . . . .  PUBLIC  CODE    PROC    ------- -----
 TIM4_FLAG?231 . . . . . . . . . . . .  PARAM   AUTO    ENUM    000002H     2
  bitstatus?233. . . . . . . . . . . . E_CONST  ----- INT      -------  2
TIM4_ClearFlag . . . . . . . . . . . .  PUBLIC  CODE    PROC    ------- -----
 TIM4_FLAG?234 . . . . . . . . . . . .  PARAM   AUTO    ENUM    000000H     2
  bitstatus?237. . . . . . . . . . . . E_CONST  ----- INT      -------  2
  itstatus?239 . . . . . . . . . . . .  PUBLIC  AUTO    U_CHAR  000000H     1
  itenable?241 . . . . . . . . . . . .  PUBLIC  AUTO    U_CHAR  000000H     1
TIM4_GetITStatus . . . . . . . . . . .  PUBLIC  CODE    PROC    ------- -----
 TIM4_IT?235 . . . . . . . . . . . . .  PARAM   AUTO    ENUM    000004H     2
  bitstatus?237. . . . . . . . . . . . E_CONST  ----- INT      -------  2
  itstatus?239 . . . . . . . . . . . .  PUBLIC  AUTO    U_CHAR  000002H     1
  itenable?241 . . . . . . . . . . . .  PUBLIC  AUTO    U_CHAR  000003H     1
TIM4_ClearITPendingBit . . . . . . . .  PUBLIC  CODE    PROC    ------- -----
 TIM4_IT?242 . . . . . . . . . . . . .  PARAM   AUTO    ENUM    000000H     2
assert_failed. . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
?BH. . . . . . . . . . . . . . . . . .  EXTERN  PAGE0   U_CHAR  ------- -----
?CH. . . . . . . . . . . . . . . . . .  EXTERN  PAGE0   U_CHAR  ------- -----
?CL. . . . . . . . . . . . . . . . . .  EXTERN  PAGE0   U_CHAR  ------- -----
?BL. . . . . . . . . . . . . . . . . .  EXTERN  PAGE0   U_CHAR  ------- -----
RCSTM8 COMPILER V2.44.12.199


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    590    ----
   CONSTANT SIZE    =     62    ----
   DATA SIZE        =   ----    ----
   PAGE0 SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.

RCSTM8 COMPILATION COMPLETE.  0 WARNING,  0 ERROR
